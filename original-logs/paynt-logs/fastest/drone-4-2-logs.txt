2022-06-05 14:46:16,605 - cli.py - This is Paynt version 0.1.0.
2022-06-05 14:46:16,609 - sketch.py - Loading sketch from /mnt/d/src/PP/synthesis/workspace/uai-benchmark/uai/drone-4-2/sketch.templ...
2022-06-05 14:46:16,626 - prism_parser.py - PRISM model type: PrismModelType.POMDP
2022-06-05 14:46:16,626 - prism_parser.py - Loading properties from /mnt/d/src/PP/synthesis/workspace/uai-benchmark/uai/drone-4-2/sketch.props ...
 WARN (FormulaParserGrammar.cpp:328): Identifier `R' coincides with a reserved keyword or operator. Property expressions using the variable or constant 'R' will not be parsed correctly.
2022-06-05 14:46:16,649 - sketch.py - Constructed quotient MDP having 1226 states and 2954 actions.
2022-06-05 14:46:16,649 - sketch.py - Found the following specification: constraints: none, optimality objective: Pmax=? ["notbad" U "goal"] 
2022-06-05 14:46:16,650 - sketch.py - Initializing the quotient ...
2022-06-05 14:46:16,651 - quotient_pomdp.py - Constructed POMDP having 761 observations.
2022-06-05 14:46:16,655 - quotient_pomdp.py - Observation labels: ['[start & turn & dx=2 & dy=4 & seedx=4 & seedy=4]', '[start & turn & dx=1 & dy=4 & seedx=-1 & seedy=-1]', '[start & !turn & dx=3 & dy=2 & seedx=1]', '[start & turn & dx=4 & seedx=-1 & seedy=-1]', '[start & turn & dx=3 & dy=3 & seedx=-1 & seedy=-1]', '[start & !turn & dx=2 & dy=4 & seedx=1 & seedy=4]', '[start & !turn & dx=3 & dy=3 & seedx=-1 & seedy=-1]', '[start & turn & dx=1 & dy=4 & seedx=2 & seedy=3]', '[start & !turn & dy=4 & seedx=2 & seedy=3]', '[start & !turn & dy=3 & seedx=-1 & seedy=-1]', '[start & !turn & dy=4 & hascrash=1 & seedy=4]', '[start & turn & dy=2 & hascrash=1 & seedy=2]', '[start & turn & dy=1 & seedx=1 & seedy=3]', '[start & !turn & dx=4 & dy=2 & seedx=3 & seedy=3]', '[start & turn & dx=1 & dy=3 & seedx=-1 & seedy=-1]', '[start & turn & seedx=1 & seedy=1]', '[start & !turn & dx=4 & dy=1 & seedx=-1 & seedy=-1]', '[start & !turn & dx=2 & dy=1 & seedx=-1 & seedy=-1]', '[start & turn & dx=2 & seedx=1 & seedy=1]', '[start & !turn & dy=4 & seedx=-1 & seedy=-1]', '[start & !turn & dy=3 & seedx=2 & seedy=4]', '[start & !turn & dx=2 & dy=4 & seedx=4 & seedy=3]', '[start & !turn & dx=2 & dy=4 & seedy=4]', '[start & !turn & dx=2 & seedx=-1 & seedy=-1]', '[start & !turn & dy=2]', '[start & turn & dx=4 & dy=3 & seedx=-1 & seedy=-1]', '[start & !turn & dx=2 & dy=2 & seedx=3 & seedy=2]', '[start & !turn & seedy=1]', '[start & !turn & dx=3 & seedx=-1 & seedy=-1]', '[start & !turn & dx=4 & dy=3 & seedx=-1 & seedy=-1]', '[start & !turn & dy=2 & seedy=1]', '[start & turn & dx=3 & dy=3 & seedx=4 & seedy=2]', '[start & turn & dy=1 & seedx=2 & seedy=2]', '[start & !turn & dx=2 & dy=3 & seedx=-1 & seedy=-1]', '[start & !turn & dy=4 & seedx=2 & seedy=4]', '[start & !turn & dx=4 & dy=3 & seedx=4 & seedy=2]', '[start & turn & dx=2 & dy=2 & seedx=3]', '[start & !turn & dx=3 & dy=4 & seedx=-1 & seedy=-1]', '[start & turn & dx=1 & seedx=-1 & seedy=-1]', '[start & !turn & dx=4 & dy=2 & seedx=4 & seedy=3]', '[start & !turn & dy=3 & seedx=1 & seedy=2]', '[start & turn & dx=3 & dy=4 & seedx=2 & seedy=2]', '[start & turn & dx=4 & dy=3 & hascrash=1 & seedx=4 & seedy=3]', '[start & !turn & dx=3 & hascrash=1 & seedx=3]', '[start & turn & dx=3 & dy=1 & seedx=2 & seedy=2]', '[start & turn & dx=2 & seedx=2 & seedy=1]', '[start & !turn & dx=2 & dy=3 & seedy=3]', '[start & turn & dx=2 & dy=4 & seedy=3]', '[start & turn & dx=4 & dy=1 & hascrash=1 & seedx=4 & seedy=1]', '[start & !turn & dx=4 & dy=2 & seedx=4 & seedy=1]', '[start & !turn & dy=2 & seedx=1 & seedy=3]', '[start & !turn & dx=1 & dy=3 & seedx=-1 & seedy=-1]', '[start & turn & dx=4 & dy=2 & seedx=3 & seedy=1]', '[start & !turn & dy=1 & seedx=1 & seedy=3]', '[start & turn & dx=1 & dy=2 & seedx=3 & seedy=3]', '[start & turn & dx=2 & seedx=1 & seedy=2]', '[start & turn & dx=2 & dy=2 & seedx=4 & seedy=4]', '[start & !turn & dy=1 & seedx=-1 & seedy=-1]', '[start & turn & dx=4 & dy=2 & seedx=2 & seedy=3]', '[start & turn & dx=4 & dy=3 & seedx=2 & seedy=3]', '[start & !turn & dx=3 & dy=1 & seedx=1]', '[start & !turn & dx=3 & seedx=4 & seedy=1]', '[start & !turn & dx=1 & dy=4 & seedy=3]', '[start & turn & dx=3 & dy=3 & seedx=4 & seedy=4]', '[start & turn & dy=2 & seedx=1 & seedy=4]', '[start & turn & dx=2 & seedx=-1 & seedy=-1]', '[start & turn & dx=4 & dy=2 & seedx=-1 & seedy=-1]', '[start & turn & dx=1 & dy=2 & seedy=2]', '[start & turn & dy=3 & seedx=2 & seedy=1]', '[start & turn & dx=4 & dy=1 & seedx=-1 & seedy=-1]', '[start & turn & dx=3 & dy=2 & seedx=1 & seedy=3]', '[start & !turn & dx=4 & dy=4 & amdone=1 & seedx=-1 & seedy=-1]', '[start & !turn & dx=1 & seedx=-1 & seedy=-1]', '[start & turn & dx=2 & dy=3 & seedx=4 & seedy=2]', '[start & !turn & dx=3 & dy=1 & seedx=-1 & seedy=-1]', '[start & turn & dx=3 & dy=4 & seedx=-1 & seedy=-1]', '[start & turn & dy=3 & seedx=-1 & seedy=-1]', '[start & !turn & dx=1 & dy=4 & seedy=4]', '[start & turn & dx=2 & dy=1 & seedx=3 & seedy=1]', '[start & turn & dx=2 & seedy=1]', '[start & turn & dx=1 & dy=3 & seedy=4]', '[start & !turn & dx=4 & seedx=-1 & seedy=-1]', '[start & turn & dy=4 & seedx=2 & seedy=2]', '[start & !turn & dx=1 & dy=3 & seedx=1 & seedy=2]', '[start & !turn & dx=3 & seedx=3 & seedy=1]', '[start & !turn & dx=1 & dy=3 & seedx=2 & seedy=4]', '[start & !turn & seedx=-1 & seedy=-1]', '[start & !turn & dx=4 & dy=2 & seedx=2 & seedy=3]', '[start & turn & dx=1 & dy=3 & seedy=1]', '[start & !turn & dx=3 & dy=1 & seedx=3 & seedy=3]', '[start & turn & dx=3 & dy=2 & seedx=-1 & seedy=-1]', '[start & turn & dy=3 & seedy=1]', '[start & !turn & dx=3 & dy=1 & seedx=3 & seedy=2]', '[start & !turn & dx=2 & dy=4 & seedx=-1 & seedy=-1]', '[start & turn & dx=2 & dy=4 & hascrash=1 & seedx=2 & seedy=4]', '[start & !turn & dx=1 & dy=3 & seedx=1 & seedy=1]', '[start & !turn & dx=3 & dy=2 & seedx=3 & seedy=4]', '[start & !turn & dx=3 & dy=1 & seedx=2]', '[start & turn & dx=3 & dy=2 & seedx=4 & seedy=4]', '[start & turn & dx=3 & dy=4 & seedx=4 & seedy=3]', '[start & turn & dx=1 & dy=3 & seedx=1 & seedy=1]', '[start & turn & dx=2 & seedx=3 & seedy=1]', '[start & turn & dx=2 & dy=1 & seedx=4]', '[start & !turn & dy=2 & seedx=-1 & seedy=-1]', '[start & turn & dx=3 & dy=1 & hascrash=1 & seedx=3 & seedy=1]', '[start & !turn & dx=3 & dy=4 & seedx=2 & seedy=4]', '[start & !turn & dx=1 & dy=1 & seedx=-1 & seedy=-1]', '[start & turn & seedx=2]', '[start & turn & dx=1 & dy=3 & seedx=3 & seedy=2]', '[start & turn & dx=3 & dy=4 & seedx=1 & seedy=2]', '[start & turn & dx=2 & dy=1 & seedx=1 & seedy=2]', '[start & !turn & dx=2 & seedy=2]', '[start & turn & dx=1 & dy=3 & seedx=2 & seedy=2]', '[start & turn & dx=3 & seedx=-1 & seedy=-1]', '[start & turn & dx=2 & dy=4 & seedx=4 & seedy=2]', '[start & turn & dx=2 & dy=1 & seedy=2]', '[start & !turn & dx=1 & dy=2 & seedx=2 & seedy=3]', '[start & !turn & dx=2 & dy=1 & seedx=4 & seedy=2]', '[start & turn & dx=3 & hascrash=1 & seedx=3]', '[start & !turn & dx=3 & dy=3 & seedx=4 & seedy=4]', '[start & !turn & dx=1 & dy=4 & seedx=-1 & seedy=-1]', '[start & turn & dx=3 & dy=4 & seedx=4 & seedy=2]', '[start & !turn & dx=1 & dy=3 & seedx=3 & seedy=4]', '[start & turn & dx=1 & hascrash=1 & seedx=1]', '[start & turn & dx=1 & dy=2 & seedx=-1 & seedy=-1]', '[start & turn & dy=4 & seedy=2]', '[start & turn & dx=2 & dy=3 & seedy=4]', '[start & !turn & dx=4 & dy=3 & hascrash=1 & seedx=4 & seedy=3]', '[start & !turn & dx=2 & dy=2 & seedx=4 & seedy=2]', '[start & turn & dy=1 & seedx=-1 & seedy=-1]', '[start & !turn & dy=1 & seedy=2]', '[start & turn & dx=1 & dy=1 & seedx=-1 & seedy=-1]', '[start & !turn & dx=1 & dy=2 & seedx=1]', '[start & !turn & dy=3 & seedx=2 & seedy=1]', '[start & !turn & dx=2 & dy=1 & seedx=4]', '[start & turn & dx=3 & seedx=1 & seedy=2]', '[start & turn & dx=3 & seedx=4 & seedy=1]', '[start & turn & dx=3 & dy=1 & seedx=-1 & seedy=-1]', '[start & turn & dx=3 & dy=1 & seedx=4 & seedy=1]', '[start & turn & dx=3 & dy=3 & seedx=2 & seedy=3]', '[start & !turn & dx=4 & dy=3 & seedx=3 & seedy=4]', '[start & turn & dx=3 & dy=2 & seedx=2 & seedy=3]', '[start & turn & dx=2 & dy=1 & seedx=1 & seedy=3]', '[start & turn & dx=4 & seedx=2]', '[start & !turn & dy=3 & seedx=1 & seedy=3]', '[start & turn & dy=1 & hascrash=1 & seedy=1]', '[start & !turn & dx=1 & dy=4 & seedx=2 & seedy=2]', '[start & turn & dx=3 & dy=3 & seedx=3 & seedy=1]', '[start & turn & dx=3 & dy=1 & seedx=2]', '[start & turn & seedx=-1 & seedy=-1]', '[start & turn & dx=2 & dy=2 & seedx=2 & seedy=3]', '[start & !turn & dy=3 & seedx=1 & seedy=1]', '[start & turn & dx=1 & dy=1 & hascrash=1 & seedx=1 & seedy=1]', '[start & turn & dx=3 & dy=1 & seedx=2 & seedy=1]', '[start & !turn & dy=2 & seedx=1 & seedy=2]', '[start & !turn & dy=4 & seedx=1 & seedy=4]', '[start & turn & dx=4 & dy=3 & seedx=3 & seedy=2]', '[start & turn & dx=2 & seedx=4 & seedy=2]', '[start & !turn & seedx=2]', '[start & !turn & dx=4 & dy=3 & seedx=2 & seedy=3]', '[start & turn & dx=1 & dy=3 & seedx=3 & seedy=4]', '[start & !turn & dy=1 & seedy=3]', '[start & turn & dx=1 & dy=1]', '[start & !turn & dx=3 & dy=2 & seedx=1 & seedy=1]', '[start & turn & dx=1 & dy=1 & seedy=3]', '[start & turn & dx=2 & dy=1]', '[start & turn & dx=2 & dy=2 & seedx=1]', '[start & turn & dx=3 & dy=2 & seedx=2]', '[start & !turn & dx=2 & dy=2 & seedx=2]', '[start & turn & dx=3 & dy=2 & seedx=2 & seedy=1]', '[start & !turn & dx=2 & dy=3 & seedx=2 & seedy=1]', '[start & !turn & dx=4 & dy=3 & seedx=3 & seedy=2]', '[start & turn & dy=2 & seedx=2]', '[start & turn & dy=4 & seedx=2 & seedy=3]', '[start & !turn & dx=4 & dy=4 & amdone=1 & seedx=2 & seedy=3]', '[start & !turn & dx=2 & dy=1 & seedx=3 & seedy=1]', '[start & !turn & dx=4 & dy=2 & seedx=2 & seedy=1]', '[start & turn & dx=2 & dy=2 & seedy=4]', '[start & turn & dx=2 & dy=3 & seedx=1 & seedy=2]', '[start & turn & dy=4 & seedx=-1 & seedy=-1]', '[start & !turn & dy=2 & seedx=1 & seedy=1]', '[start & turn & dy=1 & seedx=2]', '[start & !turn & dx=1 & dy=2 & seedx=3 & seedy=1]', '[start & !turn & dx=3 & dy=2 & seedx=4 & seedy=3]', '[start & turn & dy=2 & seedx=1 & seedy=3]', '[start & turn & dx=4 & dy=2 & hascrash=1 & seedx=4 & seedy=2]', '[start & turn & dx=4 & dy=1 & seedx=2 & seedy=3]', '[start & !turn & dx=3 & dy=2 & seedx=3 & seedy=1]', '[start & turn & dx=1 & seedx=2 & seedy=2]', '[start & turn & dx=2 & dy=3 & seedx=-1 & seedy=-1]', '[start & turn & dx=2 & dy=2 & seedx=1 & seedy=1]', '[start & turn & dx=2 & dy=3 & seedx=2 & seedy=2]', '[start & !turn & dx=4 & seedx=4 & seedy=1]', '[start & turn & dx=2 & dy=1 & seedx=3]', '[start & !turn & dy=2 & seedx=2 & seedy=4]', '[start & turn & dx=3 & dy=3 & seedx=3 & seedy=4]', '[start & !turn & dx=1 & dy=2 & hascrash=1 & seedx=1 & seedy=2]', '[start & turn & dx=2 & dy=4 & seedx=-1 & seedy=-1]', '[start & !turn & dx=2 & dy=4 & seedx=3 & seedy=3]', '[start & !turn & dy=2 & seedy=4]', '[start & turn & dx=1 & dy=3 & hascrash=1 & seedx=1 & seedy=3]', '[start & turn & dx=3 & dy=1 & seedx=4]', '[start & turn & dx=2 & dy=2 & seedx=4]', '[start & turn & dy=3 & seedx=1 & seedy=4]', '[start & !turn & dx=1 & seedy=2]', '[start & !turn & dx=3 & dy=1 & seedx=4 & seedy=3]', '[start & turn & dx=1 & seedx=3]', '[start & turn & dy=2 & seedx=2 & seedy=4]', '[start & turn & dx=3 & dy=3 & seedx=1 & seedy=4]', '[start & !turn & dx=3 & dy=2 & seedx=1 & seedy=2]', '[start & !turn & dx=3 & dy=2 & seedx=3]', '[start & turn & dx=4 & dy=3 & seedx=2 & seedy=4]', '[start & turn & dy=2 & seedx=-1 & seedy=-1]', '[start & !turn & dx=4 & dy=2 & hascrash=1 & seedx=4 & seedy=2]', '[start & turn & dx=4 & dy=1 & seedx=2 & seedy=1]', '[start & !turn & dx=4 & dy=2 & seedx=-1 & seedy=-1]', '[start & turn & dx=1 & seedx=2 & seedy=1]', '[start & turn & dx=1 & dy=2]', '[start & !turn & dx=1 & dy=3 & seedx=1 & seedy=4]', '[start & turn & dx=2 & hascrash=1 & seedx=2]', '[start & turn & dx=3 & dy=4 & seedx=3 & seedy=3]', '[start & turn & dx=2 & dy=2 & seedy=1]', '[start & turn & dy=4 & hascrash=1 & seedy=4]', '[start & !turn & dx=3 & dy=2 & seedx=2 & seedy=4]', '[start & turn & dx=2 & dy=3 & seedy=2]', '[start & !turn & dy=4 & seedx=2 & seedy=2]', '[start & turn & dx=1 & dy=1 & seedx=1 & seedy=2]', '[start & !turn & dx=3 & dy=3 & seedx=2 & seedy=4]', '[start & turn & dx=2 & dy=3 & seedx=4 & seedy=4]', '[start & !turn & dx=3 & dy=2 & seedx=-1 & seedy=-1]', '[start & turn & dx=1 & dy=2 & hascrash=1 & seedx=1 & seedy=2]', '[start & turn & dx=2 & dy=3 & seedx=1 & seedy=4]', '[start & !turn & dx=1 & dy=2 & seedx=1 & seedy=1]', '[start & turn & dx=4 & seedx=3 & seedy=2]', '[start & turn & dx=1 & dy=2 & seedx=1 & seedy=3]', '[start & !turn & dx=2 & dy=1 & seedx=3 & seedy=3]', '[start & turn & dx=4 & dy=2 & seedx=2 & seedy=2]', '[start & turn & dx=3 & dy=1 & seedx=3 & seedy=3]', '[start & !turn & dx=1 & dy=4 & seedx=3 & seedy=4]', '[start & !turn & dx=1 & dy=1 & seedx=2 & seedy=2]', '[start & turn & dy=1 & seedx=1 & seedy=2]', '[start & !turn & dx=1 & dy=3 & seedy=3]', '[start & !turn & dx=2 & dy=3 & hascrash=1 & seedx=2 & seedy=3]', '[start & turn & dx=2 & dy=1 & seedx=3 & seedy=3]', '[start & !turn & dx=4 & dy=1 & seedx=2 & seedy=3]', '[start & turn & dx=4 & dy=2 & seedx=2]', '[start & turn & dx=3 & dy=3 & seedx=1 & seedy=2]', '[start & !turn & dx=3 & dy=2 & seedx=2 & seedy=2]', '[start & !turn & seedy=2]', '[start & turn & dx=4 & dy=2 & seedx=3 & seedy=2]', '[start & !turn & dx=3 & seedx=2]', '[start & turn & dx=1 & dy=1 & seedx=3 & seedy=3]', '[start & !turn & dx=3 & dy=1 & seedx=3]', '[start & turn & dx=2 & dy=2 & seedx=4 & seedy=2]', '[start & !turn & dx=4 & dy=1 & seedx=3 & seedy=2]', '[start & turn & dx=3 & dy=4 & hascrash=1 & seedx=3 & seedy=4]', '[start & turn & dy=4 & seedx=1 & seedy=3]', '[start & turn & dx=1 & dy=2 & seedx=2 & seedy=3]', '[start & turn & dx=1 & seedy=1]', '[start & !turn & dx=2 & dy=1 & seedx=4 & seedy=3]', '[start & turn & dx=4 & dy=1 & seedx=3 & seedy=1]', '[start & !turn & hascrash=1]', '[start & turn & dx=1 & dy=4 & seedx=2 & seedy=4]', '[start & !turn & dx=2 & dy=1 & seedx=3]', '[start & turn & dx=4 & dy=3 & seedx=4 & seedy=1]', '[start & turn & dx=2 & dy=4 & seedx=3 & seedy=4]', '[start & turn & dx=3 & seedx=2 & seedy=1]', '[start & !turn & dx=1 & dy=1 & seedx=1 & seedy=2]', '[start & !turn & dx=4 & dy=4 & amdone=1 & hascrash=1 & seedx=4 & seedy=4]', '[start & !turn & dx=1 & dy=2 & seedx=-1 & seedy=-1]', '[start & turn & dx=2 & dy=4 & seedx=3 & seedy=3]', '[start & !turn & dx=2 & dy=1 & seedy=2]', '[start & turn & dx=3 & dy=3 & seedx=2 & seedy=2]', '[start & !turn & dx=3 & dy=3 & seedx=3 & seedy=2]', '[start & !turn & dx=2 & dy=3 & seedx=2 & seedy=2]', '[start & turn & dx=3 & dy=2 & seedx=1 & seedy=1]', '[start & turn & dx=3 & dy=1 & seedx=4 & seedy=3]', '[start & turn & dx=2 & dy=2 & seedx=4 & seedy=3]', '[start & turn & dx=2 & dy=2 & seedx=1 & seedy=3]', '[start & turn & dx=1 & dy=3 & seedx=3 & seedy=3]', '[start & !turn & dx=2 & seedx=3 & seedy=2]', '[start & !turn & dx=3 & seedx=4 & seedy=2]', '[start & !turn & dx=4 & dy=1 & seedx=2]', '[start & !turn & dx=3 & dy=1 & seedx=1 & seedy=1]', '[start & !turn & dx=1 & dy=2]', '[start & turn & dx=2 & dy=1 & seedx=-1 & seedy=-1]', '[start & !turn & dx=1 & dy=2 & seedx=1 & seedy=3]', '[start & turn & dx=2 & dy=2 & seedy=3]', '[start & turn & dx=2 & dy=2 & seedx=3 & seedy=3]', '[start & !turn & dx=2 & dy=2 & seedx=1 & seedy=3]', '[start & turn & dx=3 & dy=2 & seedx=2 & seedy=4]', '[start & !turn & dx=2 & dy=1 & seedx=4 & seedy=1]', '[start & !turn & dx=1 & dy=4 & seedx=2 & seedy=3]', '[start & turn & seedy=1]', '[start & turn & dx=3 & dy=2 & seedx=4 & seedy=2]', '[start & !turn & dx=4 & dy=1 & seedx=3]', '[start & turn & dx=4 & dy=1 & seedx=4 & seedy=2]', '[start & !turn & dx=2 & dy=2 & seedx=2 & seedy=4]', '[start & !turn & dx=3 & dy=3 & seedx=1 & seedy=1]', '[start & turn & dx=2 & dy=4 & seedx=3 & seedy=2]', '[start & !turn & dx=2 & dy=3 & seedx=1 & seedy=2]', '[start & turn & dx=2 & dy=3 & seedy=1]', '[start & !turn & dx=4 & seedx=2 & seedy=1]', '[start & turn & dx=2 & dy=2 & seedx=2 & seedy=1]', '[start & turn & dx=1 & dy=3 & seedx=1 & seedy=2]', '[start & !turn & dx=2 & dy=4 & seedy=3]', '[start & turn & dy=3 & seedx=1 & seedy=2]', '[start & turn & dx=2 & seedx=3]', '[start & !turn & dx=1 & dy=1 & seedy=2]', '[start & !turn & dx=4 & seedx=2 & seedy=2]', '[start & turn & dy=3 & seedx=2 & seedy=2]', '[start & turn & hascrash=1]', '[start & turn & dx=2 & dy=4 & seedy=2]', '[start & !turn & dx=1 & dy=2 & seedy=4]', '[start & !turn & dx=2 & dy=3 & seedx=3 & seedy=2]', '[start & !turn & dx=3 & dy=4 & seedx=4 & seedy=4]', '[start & !turn & dx=2 & dy=1 & seedx=2 & seedy=3]', '[start & !turn & dy=4 & seedx=1 & seedy=3]', '[start & !turn & dy=3 & seedy=1]', '[start & !turn & dx=3 & dy=2 & seedx=1 & seedy=3]', '[start & !turn & dx=2 & dy=2 & seedy=4]', '[start & !turn & dx=1 & dy=1 & seedx=1]', '[start & turn & dx=3 & dy=2 & seedx=2 & seedy=2]', '[start & !turn & dx=2 & dy=2 & seedy=1]', '[start & turn & dx=1 & dy=4 & seedy=4]', '[start & turn & dx=2 & dy=3 & seedx=3 & seedy=4]', '[start & !turn & dx=1 & dy=1 & seedy=1]', '[start & !turn & dx=2 & dy=4 & hascrash=1 & seedx=2 & seedy=4]', '[start & !turn & dx=2 & dy=3 & seedx=3 & seedy=4]', '[start & turn & dx=3 & seedx=3 & seedy=1]', '[start & !turn & dx=2 & dy=2 & seedx=1 & seedy=4]', '[start & !turn & dx=1 & dy=3 & seedy=4]', '[start & !turn & dx=3 & dy=2 & seedx=4 & seedy=1]', '[start & turn & dx=4 & dy=2 & seedx=4]', '[start & turn & dx=3 & dy=4 & seedx=2 & seedy=3]', '[start & !turn & dx=4 & dy=2 & seedx=3 & seedy=4]', '[start & turn & dy=4 & seedx=1 & seedy=2]', '[start & !turn & dx=4 & dy=2 & seedx=3 & seedy=2]', '[start & !turn & dx=3 & dy=1 & hascrash=1 & seedx=3 & seedy=1]', '[start & !turn & dx=3 & seedx=1 & seedy=1]', '[start & turn & dx=3 & seedx=3 & seedy=2]', '[start & turn & dx=1 & dy=2 & seedy=4]', '[start & turn & dx=3 & dy=4 & seedx=1 & seedy=4]', '[start & !turn & dx=1 & dy=3 & seedx=3 & seedy=1]', '[start & turn & dx=2 & seedx=4 & seedy=1]', '[start & turn & dy=4 & seedx=1 & seedy=4]', '[start & !turn & dx=4 & dy=3 & seedx=2 & seedy=4]', '[start & turn & dx=3 & dy=1 & seedx=1]', '[start & !turn & dx=2 & dy=3 & seedy=4]', '[start & !turn & dx=2 & seedx=2 & seedy=1]', '[start & turn & dx=1 & dy=1 & seedx=3]', '[start & !turn & dx=1 & seedx=1 & seedy=1]', '[start & !turn & dx=2]', '[start & !turn & seedx=1]', '[start & !turn & dx=3 & seedx=2 & seedy=2]', '[start & !turn & dx=3 & dy=2 & seedx=3 & seedy=3]', '[start & turn & dx=1 & dy=4 & seedy=3]', '[start & turn & dx=1 & dy=2 & seedy=3]', '[start & !turn & dx=3 & dy=3 & seedx=1 & seedy=2]', '[start & !turn & dy=1 & seedx=2 & seedy=2]', '[start & turn & dx=3 & dy=1 & seedx=1 & seedy=3]', '[start & !turn & dx=3 & dy=1 & seedx=1 & seedy=3]', '[start & turn & dx=2 & dy=3 & seedx=1 & seedy=3]', '[start & !turn & dx=4 & dy=4 & amdone=1 & seedx=4 & seedy=2]', '[start & turn & dx=2 & dy=1 & seedx=2 & seedy=3]', '[start & !turn & dx=1 & dy=2 & seedx=3]', '[start & !turn & dx=2 & dy=4 & seedx=1 & seedy=3]', '[start & !turn & dx=2 & dy=4 & seedx=4 & seedy=2]', '[start & !turn & dx=1 & dy=4 & seedx=1 & seedy=3]', '[start & !turn & dx=1 & seedx=3 & seedy=2]', '[start & !turn & dx=3 & dy=3 & seedx=4 & seedy=2]', '[start & !turn & dx=4 & dy=2 & seedx=2 & seedy=4]', '[start & !turn & dx=2 & dy=2 & seedx=3]', '[start & turn & dy=2 & seedx=1 & seedy=2]', '[start & turn & dx=3 & seedx=1 & seedy=1]', '[start & !turn & dx=3 & dy=1 & seedx=2 & seedy=1]', '[start & !turn & dx=1 & dy=3 & seedx=3 & seedy=3]', '[start & !turn & dx=4 & dy=2 & seedx=2]', '[start & !turn & dx=1 & dy=4 & hascrash=1 & seedx=1 & seedy=4]', '[start & !turn & dy=2 & seedx=2 & seedy=1]', '[start & turn & dx=2 & dy=2 & seedx=1 & seedy=2]', '[start & turn & dx=2 & seedx=1]', '[start & !turn & dx=3 & dy=2 & seedx=2 & seedy=1]', '[start & turn & dx=3 & dy=2 & seedx=4 & seedy=3]', '[start & !turn & dx=2 & dy=2 & seedx=4 & seedy=3]', '[start & !turn & dx=1 & dy=1 & hascrash=1 & seedx=1 & seedy=1]', '[start & !turn & dx=3 & dy=2 & seedx=2]', '[start & !turn & dy=3 & seedy=4]', '[start & !turn & dx=1 & dy=3 & hascrash=1 & seedx=1 & seedy=3]', '[start & turn & dx=1 & dy=1 & seedx=3 & seedy=1]', '[start & turn & dx=4 & dy=1 & seedx=4 & seedy=3]', '[start & turn & dy=1 & seedy=2]', '[start & !turn & dx=1 & seedx=1 & seedy=2]', '[start & turn & dx=1 & dy=4 & seedx=1 & seedy=2]', '[start & !turn & dx=2 & dy=3 & seedx=3 & seedy=3]', '[start & !turn & dy=2 & seedy=3]', '[start & !turn & dx=1 & seedx=3]', '[start & !turn & dx=1 & dy=2 & seedy=1]', '[start & turn & dx=1 & seedx=3 & seedy=2]', '[start & turn & seedy=2]', '[start & turn & dx=1 & dy=2 & seedx=1 & seedy=1]', '[start & turn & dy=1 & seedx=2 & seedy=1]', '[start & !turn & dx=1 & dy=4 & seedx=2 & seedy=4]', '[start & !turn & dx=2 & dy=2 & seedx=3 & seedy=4]', '[start & turn & dx=4 & dy=3 & seedx=2 & seedy=2]', '[start & turn & dx=2 & dy=2 & hascrash=1 & seedx=2 & seedy=2]', '[start & !turn & dx=4 & dy=2 & seedx=4 & seedy=4]', '[start & turn & dx=1 & dy=1 & seedx=3 & seedy=2]', '[start & !turn & dx=4 & dy=4 & amdone=1 & seedx=4 & seedy=3]', '[start & turn & dx=2 & dy=1 & seedx=3 & seedy=2]', '[start & turn & dx=4 & dy=1 & seedx=3 & seedy=2]', '[start & !turn & dx=3 & dy=2 & seedx=4 & seedy=2]', '[start & turn & dx=2 & dy=4 & seedx=1 & seedy=3]', '[start & turn & dx=3 & seedx=2]', '[start & turn & dx=2 & dy=1 & seedy=1]', '[start & turn & dx=2 & dy=3 & seedx=4 & seedy=3]', '[start & turn & dx=2 & dy=2 & seedx=2]', '[start & turn & dx=2 & dy=3 & seedx=1 & seedy=1]', '[start & !turn & dx=1 & dy=3 & seedx=2 & seedy=3]', '[start & !turn & dx=3 & seedx=1 & seedy=2]', '[start & turn & dx=3 & dy=3 & seedx=1 & seedy=3]', '[start & !turn & dx=3 & seedx=2 & seedy=1]', '[start & turn & dx=3 & dy=1 & seedx=3]', '[start & turn & dx=2 & dy=4 & seedx=1 & seedy=4]', '[start & !turn & dx=2 & seedx=1 & seedy=1]', '[start & !turn & dx=3 & dy=2 & seedx=4]', '[start & !turn & dy=2 & seedx=2 & seedy=3]', '[start & !turn & dx=2 & seedx=3]', '[start & turn & dx=2 & dy=3 & seedx=4 & seedy=1]', '[start & !turn & dx=1 & dy=4 & seedx=3 & seedy=3]', '[start & turn & dx=3 & dy=3 & hascrash=1 & seedx=3 & seedy=3]', '[start & !turn & dx=1 & dy=4 & seedy=2]', '[start & !turn & dx=1 & dy=1 & seedx=2 & seedy=1]', '[start & turn & dx=2 & dy=2 & seedx=4 & seedy=1]', '[start & !turn & dx=3 & seedx=3 & seedy=2]', '[start & turn & dx=3 & dy=3 & seedx=4 & seedy=3]', '[start & turn & dx=1 & dy=1 & seedx=2 & seedy=1]', '[!start & !turn & seedx=-1 & seedy=-1]', '[start & turn & dy=4 & seedx=2 & seedy=4]', '[start & turn & dx=2 & seedx=3 & seedy=2]', '[start & !turn & dx=1 & seedy=1]', '[start & !turn & dy=3 & hascrash=1 & seedy=3]', '[start & turn & dx=1 & dy=3 & seedy=2]', '[start & turn & dx=1 & dy=2 & seedx=2]', '[start & turn & dx=3 & dy=3 & seedx=3 & seedy=2]', '[start & turn & dx=1 & dy=1 & seedy=1]', '[start & !turn & dx=2 & dy=1 & seedy=3]', '[start & !turn & dx=2 & dy=2 & seedx=4]', '[start & !turn & dx=1 & dy=1 & seedx=3 & seedy=1]', '[start & !turn & dx=3 & dy=2 & hascrash=1 & seedx=3 & seedy=2]', '[start & !turn & dx=1]', '[start & !turn & dx=4 & hascrash=1 & seedx=4]', '[start & !turn & dx=2 & dy=1 & seedx=3 & seedy=2]', '[start & !turn & dy=3 & seedy=2]', '[start & !turn & dx=3 & seedx=4]', '[start & turn & dx=2 & dy=3 & seedx=3 & seedy=1]', '[start & !turn & dx=2 & dy=1 & seedx=1 & seedy=2]', '[start & !turn & dx=1 & dy=3 & seedx=3 & seedy=2]', '[start & turn & dx=1 & dy=3 & seedx=1 & seedy=4]', '[start & !turn & dx=1 & seedx=2 & seedy=2]', '[start & !turn & dy=2 & hascrash=1 & seedy=2]', '[start & turn & dx=1 & dy=4 & seedx=3 & seedy=3]', '[start & turn & dy=1 & seedy=3]', '[start & !turn & dx=4 & dy=1 & seedx=4]', '[start & turn & dx=3 & dy=4 & seedx=4 & seedy=4]', '[start & !turn & dy=3 & seedx=2 & seedy=3]', '[start & turn & dx=1 & seedx=3 & seedy=1]', '[start & !turn & dx=4 & dy=3 & seedx=4 & seedy=1]', '[start & !turn & dx=4 & seedx=3 & seedy=2]', '[start & turn & dx=3 & dy=1 & seedx=4 & seedy=2]', '[start & turn & dy=2 & seedy=4]', '[start & turn & dx=4 & seedx=2 & seedy=1]', '[start & !turn & dx=3 & dy=4 & seedx=2 & seedy=2]', '[start & !turn & dx=2 & seedx=1 & seedy=2]', '[start & !turn & dx=4 & dy=3 & seedx=2 & seedy=1]', '[start & !turn & dx=4 & dy=1 & seedx=2 & seedy=2]', '[start & turn & dx=4 & dy=1 & seedx=2]', '[start & turn & dx=1 & dy=2 & seedx=2 & seedy=2]', '[start & !turn & dx=2 & dy=1 & seedx=1 & seedy=1]', '[start & !turn & dx=4 & dy=1 & seedx=3 & seedy=1]', '[start & turn & dx=3 & dy=2 & seedx=1 & seedy=2]', '[start & !turn & dx=2 & seedx=1]', '[start & !turn & dx=1 & seedx=2 & seedy=1]', '[start & !turn & dy=1 & seedx=1]', '[start & !turn & dx=4 & seedx=3 & seedy=1]', '[start & !turn & dx=3 & dy=3 & seedx=2 & seedy=2]', '[start & turn & dx=3 & dy=1 & seedx=1 & seedy=2]', '[start & !turn & dx=4 & dy=4 & amdone=1 & seedx=3 & seedy=3]', '[start & turn & dx=4 & dy=3 & seedx=2 & seedy=1]', '[start & !turn & dx=2 & dy=2 & seedx=1]', '[start & !turn & dx=4 & dy=1 & hascrash=1 & seedx=4 & seedy=1]', '[start & !turn & dx=1 & dy=1 & seedy=3]', '[start & turn & dx=4 & dy=1 & seedx=2 & seedy=2]', '[start & turn & dy=3 & seedx=1 & seedy=1]', '[start & !turn & dx=2 & dy=4 & seedx=2 & seedy=2]', '[start & turn & dx=1 & dy=2 & seedx=2 & seedy=1]', '[start & !turn & dx=4 & dy=3 & seedx=2 & seedy=2]', '[start & !turn & dx=3 & dy=3 & seedx=4 & seedy=3]', '[start & !turn & dx=2 & dy=3 & seedx=3 & seedy=1]', '[start & !turn & dx=3 & dy=3 & seedx=2 & seedy=1]', '[start & turn & dy=3 & seedy=4]', '[start & !turn & seedx=1 & seedy=1]', '[start & !turn & dx=3 & dy=3 & seedx=1 & seedy=3]', '[start & turn & dx=3 & dy=1 & seedx=2 & seedy=3]', '[start & !turn & dx=1 & dy=2 & seedx=3 & seedy=4]', '[start & turn & dx=4 & dy=3 & seedx=3 & seedy=4]', '[start & turn & dy=3 & seedy=2]', '[start & !turn & dy=1 & seedx=1 & seedy=1]', '[start & turn & dx=3 & dy=1 & seedx=3 & seedy=2]', '[start & turn & dx=1 & dy=4 & hascrash=1 & seedx=1 & seedy=4]', '[start & turn & dx=4 & dy=1 & seedx=3]', '[start & !turn & dx=3 & dy=4 & seedx=1 & seedy=2]', '[start & !turn & dx=2 & dy=4 & seedx=3 & seedy=4]', '[start & turn & dx=2 & dy=4 & seedx=1 & seedy=2]', '[start & !turn & dx=1 & dy=1 & seedx=2 & seedy=3]', '[start & turn & dx=1 & dy=4 & seedx=1 & seedy=3]', '[start & turn & dx=4 & dy=2 & seedx=3 & seedy=4]', '[start & turn & dx=1 & dy=4 & seedx=2 & seedy=2]', '[start & turn & dx=4 & dy=2 & seedx=3]', '[start & !turn & dx=4 & seedx=4 & seedy=2]', '[start & turn & dx=1 & dy=2 & seedy=1]', '[start & !turn & dx=4 & dy=3 & seedx=3 & seedy=1]', '[start & turn & dx=3 & dy=2 & seedx=3 & seedy=1]', '[start & !turn & dx=2 & dy=2 & seedx=4 & seedy=4]', '[start & turn & dy=1 & seedx=1]', '[start & !turn & dx=1 & dy=3 & seedx=2 & seedy=2]', '[start & turn & dx=2 & dy=1 & seedx=4 & seedy=1]', '[start & !turn & seedx=2 & seedy=2]', '[start & turn & dy=4 & seedy=3]', '[start & turn & dx=1 & dy=3 & seedx=2 & seedy=3]', '[start & !turn & dx=3 & dy=1 & seedx=2 & seedy=3]', '[start & turn & dx=2 & dy=2 & seedx=2 & seedy=4]', '[start & !turn & dx=1 & dy=1 & seedx=3 & seedy=3]', '[start & turn & dx=1 & dy=4 & seedy=2]', '[start & !turn & dx=3 & dy=3 & seedx=3 & seedy=1]', '[start & turn & dy=2 & seedx=2 & seedy=3]', '[start & !turn & dx=1 & dy=2 & seedy=2]', '[start & turn & dx=3 & dy=2 & seedx=1 & seedy=4]', '[start & !turn & dx=2 & dy=4 & seedy=2]', '[start & turn & dx=1 & dy=3 & seedx=3 & seedy=1]', '[start & turn & dy=2]', '[start & !turn & dx=2 & dy=4 & seedx=3 & seedy=2]', '[start & !turn & dx=1 & dy=1 & seedx=1 & seedy=3]', '[start & turn & dx=2 & dy=3 & seedx=2 & seedy=1]', '[start & !turn & dx=4 & dy=2 & seedx=4]', '[start & turn & dx=4 & seedx=3 & seedy=1]', '[start & turn & dx=4 & seedx=4 & seedy=2]', '[start & turn & dx=3 & dy=4 & seedx=3 & seedy=2]', '[start & turn & dx=2 & seedx=2 & seedy=2]', '[start & turn & dx=1 & dy=2 & seedx=3 & seedy=4]', '[start & !turn & dx=3 & dy=1 & seedx=4 & seedy=1]', '[start & turn & dx=1 & dy=1 & seedx=2]', '[start & !turn & dx=3 & dy=4 & seedx=4 & seedy=3]', '[start & !turn & dx=2 & dy=1 & seedx=1]', '[start & !turn & dy=4 & seedy=3]', '[start & turn & dy=3 & seedx=1 & seedy=3]', '[start & turn & dx=2 & dy=2 & seedx=3 & seedy=2]', '[start & turn & dy=2 & seedx=1]', '[start & turn & dx=4 & dy=3 & seedx=3 & seedy=3]', '[start & !turn & dx=4 & dy=4 & amdone=1 & seedx=2 & seedy=2]', '[start & !turn & dy=1 & hascrash=1 & seedy=1]', '[start & !turn & dx=2 & dy=3 & seedy=2]', '[start & !turn & dx=4 & dy=3 & seedx=3 & seedy=3]', '[start & turn & seedx=2 & seedy=2]', '[start & !turn & dx=2 & dy=2 & seedy=3]', '[start & !turn & dx=4 & dy=1 & seedx=4 & seedy=2]', '[start & turn & dx=2 & dy=4 & seedx=2 & seedy=3]', '[start & turn & seedx=1]', '[start & !turn & dx=2 & dy=1 & seedx=1 & seedy=3]', '[start & turn & dx=1 & dy=2 & seedx=3]', '[start & !turn & dy=1 & seedx=1 & seedy=2]', '[start & turn & dx=4 & dy=3 & seedx=4 & seedy=2]', '[start & !turn & dx=2 & dy=3 & seedx=1 & seedy=3]', '[start & !turn & dx=1 & dy=1 & seedx=2]', '[start & turn & dx=2 & dy=4 & seedy=4]', '[start & turn & dx=2]', '[start & !turn & dx=2 & dy=3 & seedy=1]', '[start & !turn & dx=2 & dy=2 & seedx=2 & seedy=3]', '[start & !turn & dx=2 & dy=1 & seedx=2 & seedy=2]', '[start & !turn & dx=2 & dy=4 & seedx=2 & seedy=3]', '[start & !turn & dx=4 & dy=1 & seedx=2 & seedy=1]', '[start & turn & dx=4 & seedx=3]', '[start & !turn & dx=3 & dy=4 & seedx=3 & seedy=3]', '[start & !turn & dx=2 & dy=3 & seedx=4 & seedy=3]', '[start & turn & dx=4 & seedx=2 & seedy=2]', '[start & !turn & dx=2 & dy=2 & hascrash=1 & seedx=2 & seedy=2]', '[start & turn & dx=1 & seedy=2]', '[start & turn & dx=2 & seedy=2]', '[start & turn & dx=4 & dy=2 & seedx=2 & seedy=4]', '[start & !turn & dx=1 & dy=2 & seedx=2 & seedy=1]', '[start & turn & dy=2 & seedy=1]', '[start & !turn & dx=1 & dy=1]', '[start & !turn & dx=2 & dy=2 & seedx=1 & seedy=2]', '[start & !turn & dx=3 & dy=4 & seedx=1 & seedy=4]', '[start & !turn & dy=1 & seedx=2 & seedy=3]', '[start & turn & dx=1 & dy=2 & seedx=1]', '[start & turn & dy=3 & seedx=2 & seedy=3]', '[start & !turn & dx=2 & dy=4 & seedx=4 & seedy=4]', '[start & turn & dx=3 & dy=2 & seedx=3]', '[start & !turn & dx=2 & dy=3 & seedx=4 & seedy=2]', '[start & turn & dx=1 & dy=2 & seedx=2 & seedy=4]', '[start & turn & dy=3 & hascrash=1 & seedy=3]', '[start & turn & dx=3 & dy=3 & seedx=1 & seedy=1]', '[start & turn & dy=1 & seedx=2 & seedy=3]', '[start & !turn & dy=2 & seedx=2 & seedy=2]', '[start & turn & dx=2 & dy=3 & hascrash=1 & seedx=2 & seedy=3]', '[start & turn & dx=4 & dy=2 & seedx=2 & seedy=1]', '[start & !turn & seedx=1 & seedy=2]', '[start & turn & dx=4 & dy=2 & seedx=3 & seedy=3]', '[start & turn & dx=1 & dy=3 & seedy=3]', '[start & !turn & dx=4 & dy=3 & seedx=4 & seedy=4]', '[start & !turn & dx=2 & dy=3 & seedx=4 & seedy=4]', '[start & turn & dx=1 & dy=1 & seedy=2]', '[start & turn & dx=4 & dy=2 & seedx=4 & seedy=3]', '[start & turn & dx=3 & dy=2 & seedx=4]', '[start & !turn & dx=1 & dy=2 & seedx=2 & seedy=2]', '[start & turn & dx=2 & dy=3 & seedx=3 & seedy=3]', '[start & turn & dx=1 & dy=3 & seedx=2 & seedy=4]', '[start & turn & dx=4 & seedx=4 & seedy=1]', '[start & !turn & dx=1 & dy=2 & seedx=2 & seedy=4]', '[start & !turn & dx=1 & dy=3 & seedy=2]', '[start & !turn & dy=3 & seedx=2 & seedy=2]', '[start & turn & dx=3 & seedx=2 & seedy=2]', '[start & !turn & seedx=2 & seedy=1]', '[start & turn & dx=4 & hascrash=1 & seedx=4]', '[start & !turn & dx=3 & dy=1 & seedx=1 & seedy=2]', '[start & !turn & dx=4 & seedx=3]', '[start & !turn & dx=3 & seedx=1]', '[start & !turn & dx=3 & dy=2 & seedx=1 & seedy=4]', '[start & turn & dx=2 & dy=3 & seedx=3 & seedy=2]', '[start & turn & dx=2 & dy=1 & seedx=1 & seedy=1]', '[start & turn & dx=1 & dy=4 & seedx=3 & seedy=4]', '[start & !turn & dy=4 & seedx=1 & seedy=2]', '[start & turn & dx=2 & dy=2]', '[start & !turn & dx=4 & dy=2 & seedx=3]', '[start & !turn & dx=1 & dy=2 & seedx=3 & seedy=3]', '[start & !turn & dx=2 & dy=2]', '[start & !turn & dx=3 & dy=4 & seedx=1 & seedy=3]', '[start & !turn & dx=2 & dy=3 & seedx=2 & seedy=4]', '[start & turn & dx=2 & dy=1 & seedx=2]', '[start & turn & dx=3 & dy=3 & seedx=4 & seedy=1]', '[start & !turn & dx=4 & dy=2 & seedx=3 & seedy=1]', '[start & turn & dx=1 & dy=1 & seedx=1 & seedy=3]', '[start & !turn & dx=1 & dy=4 & seedx=3 & seedy=2]', '[start & turn & dx=2 & dy=1 & seedx=1]', '[start & !turn & dx=3 & dy=2 & seedx=4 & seedy=4]', '[start & !turn & dx=2 & dy=2 & seedy=2]', '[start & !turn & dx=1 & dy=2 & seedx=1 & seedy=4]', '[start & turn & dx=1 & seedx=2]', '[start & !turn & dy=1]', '[start & turn & dx=4 & dy=2 & seedx=4 & seedy=1]', '[start & !turn & dx=1 & seedx=3 & seedy=1]', '[start & turn & dx=2 & dy=1 & seedx=2 & seedy=2]', '[start & !turn & dx=4 & seedx=2]', '[start & !turn & dy=2 & seedx=1]', '[start & turn & dx=3 & dy=2 & seedx=3 & seedy=4]', '[start & turn & dx=2 & dy=1 & seedy=3]', '[start & turn & dx=2 & dy=3 & seedx=2 & seedy=4]', '[start & !turn & dx=2 & seedx=3 & seedy=1]', '[start & turn & dx=1 & dy=1 & seedx=2 & seedy=2]', '[start & !turn & dx=2 & dy=2 & seedx=3 & seedy=3]', '[start & !turn & dx=2 & seedx=4 & seedy=1]', '[start & turn & dx=3 & dy=2 & hascrash=1 & seedx=3 & seedy=2]', '[start & !turn & dx=4 & dy=4 & amdone=1 & seedx=3 & seedy=2]', '[start & !turn & dx=3 & dy=3 & seedx=1 & seedy=4]', '[start & turn & dx=3 & seedx=4 & seedy=2]', '[start & turn & dx=4 & dy=1 & seedx=3 & seedy=3]', '[start & !turn & dy=4 & seedy=2]', '[start & !turn & dx=2 & seedy=1]', '[start & turn & dx=3 & dy=3 & seedx=2 & seedy=4]', '[start & !turn & dx=2 & dy=2 & seedx=1 & seedy=1]', '[start & turn & dx=1 & dy=2 & seedx=1 & seedy=4]', '[start & turn & dx=2 & dy=1 & seedx=4 & seedy=3]', '[start & !turn & dx=2 & hascrash=1 & seedx=2]', '[start & !turn & dx=1 & dy=2 & seedx=2]', '[start & turn & dx=4 & dy=3 & seedx=4 & seedy=4]', '[start & turn & dx=2 & dy=1 & hascrash=1 & seedx=2 & seedy=1]', '[start & !turn & dx=2 & dy=3 & seedx=4 & seedy=1]', '[start & turn & dx=3 & seedx=1]', '[start & !turn & dx=2 & dy=1 & seedx=2]', '[start & turn & dx=2 & dy=2 & seedx=3 & seedy=1]', '[start & !turn & dx=2 & seedx=2 & seedy=2]', '[start & !turn & dx=2 & dy=4 & seedx=1 & seedy=2]', '[start & turn & seedx=1 & seedy=2]', '[start & turn & dx=1 & dy=2 & seedx=3 & seedy=1]', '[start & !turn & dx=3 & dy=1 & seedx=4 & seedy=2]', '[start & turn & dx=1 & seedx=1 & seedy=1]', '[start & turn & dx=2 & dy=2 & seedy=2]', '[start & !turn & dy=1 & seedx=2 & seedy=1]', '[start & turn & seedx=2 & seedy=1]', '[start & !turn & dx=3 & dy=4 & seedx=3 & seedy=2]', '[start & !turn & dx=2 & dy=2 & seedx=3 & seedy=1]', '[start & !turn & dx=4 & dy=4 & amdone=1 & seedx=3 & seedy=4]', '[start & turn & dy=2 & seedx=2 & seedy=1]', '[start & turn & dx=3 & dy=2 & seedx=1]', '[start & turn & dx=1]', '[start & turn & dx=3 & dy=4 & seedx=2 & seedy=4]', '[start & !turn & dx=3 & dy=4 & hascrash=1 & seedx=3 & seedy=4]', '[start & !turn & dx=4 & dy=4 & amdone=1 & seedx=2 & seedy=4]', '[start & !turn & dx=1 & dy=1 & seedx=3]', '[start & !turn & dx=2 & dy=3 & seedx=1 & seedy=1]', '[start & turn & dx=1 & dy=4 & seedx=3 & seedy=2]', '[start & turn & dx=3 & dy=2 & seedx=4 & seedy=1]', '[start & !turn & dx=1 & hascrash=1 & seedx=1]', '[start & turn & dx=2 & dy=4 & seedx=2 & seedy=2]', '[start & turn & dx=3 & dy=3 & seedx=2 & seedy=1]', '[start & turn & dx=2 & dy=4 & seedx=4 & seedy=3]', '[start & !turn & dx=3 & dy=1 & seedx=4]', '[start & !turn & dx=4 & dy=1 & seedx=4 & seedy=3]', '[start & !turn & dx=2 & seedx=4]', '[start & !turn & dx=3 & dy=1 & seedx=2 & seedy=2]', '[start & !turn & dx=3 & dy=3 & seedx=2 & seedy=3]', '[start & turn & dx=2 & dy=3 & seedy=3]', '[start & turn & dx=2 & dy=2 & seedx=3 & seedy=4]', '[start & !turn & dy=2 & seedx=1 & seedy=4]', '[start & !turn & dx=3 & dy=3 & seedx=3 & seedy=4]', '[start & turn & dy=2 & seedx=1 & seedy=1]', '[start & !turn & dx=1 & dy=1 & seedx=3 & seedy=2]', '[start & turn & dx=1 & dy=1 & seedx=2 & seedy=3]', '[start & !turn & dx=1 & dy=2 & seedy=3]', '[start & !turn & dx=2 & dy=1]', '[start & turn & dx=3 & seedx=4]', '[start & !turn & dy=3 & seedx=1 & seedy=4]', '[start & !turn & dy=1 & seedx=2]', '[start & !turn & dx=3 & dy=2 & seedx=2 & seedy=3]', '[start & !turn & dx=3 & dy=3 & hascrash=1 & seedx=3 & seedy=3]', '[start & !turn & dx=3 & dy=3 & seedx=4 & seedy=1]', '[start & turn & dy=2 & seedy=3]', '[start & turn & dx=4 & dy=1 & seedx=4]', '[start & !turn & dx=2 & dy=3 & seedx=1 & seedy=4]', '[start & turn & dx=4 & dy=3 & seedx=3 & seedy=1]', '[start & turn & dx=2 & dy=2 & seedx=1 & seedy=4]', '[start & !turn & dx=2 & seedx=4 & seedy=2]', '[start & turn & dx=3 & dy=4 & seedx=1 & seedy=3]', '[start & turn & dx=1 & dy=3 & seedx=2 & seedy=1]', '[start & turn & dy=2 & seedx=2 & seedy=2]', '[start & turn & dx=1 & dy=1 & seedx=1]', '[start & !turn & dx=1 & seedx=2]', '[start & turn & dx=3 & dy=2 & seedx=3 & seedy=3]', '[start & turn & dx=2 & seedx=4]', '[start & !turn & dx=4 & dy=2 & seedx=2 & seedy=2]', '[start & turn & dy=3 & seedx=2 & seedy=4]', '[start & !turn & dx=4 & dy=1 & seedx=3 & seedy=3]', '[start & turn & dx=1 & seedx=1 & seedy=2]', '[start & !turn & dx=1 & dy=2 & seedx=3 & seedy=2]', '[start & !turn & dx=2 & dy=2 & seedx=2 & seedy=1]', '[start & !turn & dx=1 & dy=3 & seedy=1]', '[start & turn & dy=1 & seedx=1 & seedy=1]', '[start & !turn & dy=2 & seedx=2]', '[start & turn & dy=1]', '[start & !turn & dx=3 & dy=4 & seedx=2 & seedy=3]', '[start & turn & dx=4 & dy=2 & seedx=4 & seedy=4]', '[start & !turn & dx=2 & dy=1 & hascrash=1 & seedx=2 & seedy=1]', '[start & !turn & dx=3 & dy=4 & seedx=4 & seedy=2]', '[start & turn & dx=1 & dy=2 & seedx=3 & seedy=2]', '[start & turn & dx=2 & dy=1 & seedx=4 & seedy=2]', '[start & !turn & dx=2 & dy=1 & seedy=1]', '[start & !turn & dx=1 & dy=3 & seedx=2 & seedy=1]', '[start & !turn & dx=1 & dy=4 & seedx=1 & seedy=2]', '[start & !turn & dx=2 & dy=2 & seedx=4 & seedy=1]', '[start & turn & dx=3 & dy=1 & seedx=1 & seedy=1]']
2022-06-05 14:46:16,676 - quotient_pomdp.py - Unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2022-06-05 14:46:16,676 - quotient_pomdp.py - Constructed quotient MDP having 1226 states and 2954 actions.
2022-06-05 14:46:16,800 - sketch.py - Sketch parsing complete.
2022-06-05 14:46:16,800 - sketch.py - Sketch has 351 holes
2022-06-05 14:46:16,801 - sketch.py - Design space size: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2022-06-05 14:46:16,801 - quotient_pomdp.py - Unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2022-06-05 14:46:16,801 - quotient_pomdp.py - Constructed quotient MDP having 1226 states and 2954 actions.

------------------------------------------------------------

2022-06-05 14:46:16,927 - quotient_pomdp.py - Symmetry breaking: reduced design space from 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504 to 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504
2022-06-05 14:46:16,934 - synthesizer.py - Synthesis initiated.
2022-06-05 14:46:17,082 - property.py - New opt = 0.9365406912293412.
2022-06-05 14:46:17,150 - property.py - New opt = 0.9381619242986312.
2022-06-05 14:46:17,359 - property.py - New opt = 0.9396842462267165.
2022-06-05 14:46:17,594 - property.py - New opt = 0.9402422585507453.
2022-06-05 14:46:18,250 - property.py - New opt = 0.9416118301274028.
2022-06-05 14:46:18,873 - property.py - New opt = 0.9421360724502297.
2022-06-05 14:46:19,228 - property.py - New opt = 0.9426220687914761.
> Progress 0.0%, elapsed 3.0 s, iters = (604, 0), opt = 0.943
2022-06-05 14:46:21,625 - property.py - New opt = 0.9441721967784398.
2022-06-05 14:46:21,805 - property.py - New opt = 0.9447113470734623.
> Progress 0.0%, elapsed 6.0 s, iters = (1218, 0), opt = 0.945
2022-06-05 14:46:22,952 - property.py - New opt = 0.9462153288567633.
2022-06-05 14:46:24,157 - property.py - New opt = 0.9476830895865804.
2022-06-05 14:46:24,751 - property.py - New opt = 0.9491729473542725.
2022-06-05 14:46:25,401 - property.py - New opt = 0.9506495758902705.
> Progress 0.0%, elapsed 9.0 s, iters = (1839, 0), opt = 0.951
2022-06-05 14:46:26,616 - property.py - New opt = 0.9510957032100176.
2022-06-05 14:46:26,735 - property.py - New opt = 0.951508596729.
2022-06-05 14:46:26,874 - property.py - New opt = 0.9520601426184231.
2022-06-05 14:46:27,710 - property.py - New opt = 0.9526052748509498.
> Progress 0.0%, elapsed 12.0 s, iters = (2452, 0), opt = 0.953
2022-06-05 14:46:30,547 - property.py - New opt = 0.9529808772912998.
2022-06-05 14:46:30,916 - property.py - New opt = 0.9539328115354951.
2022-06-05 14:46:31,263 - property.py - New opt = 0.9544255227749343.
> Progress 0.0%, elapsed 15.0 s, iters = (3089, 0), opt = 0.954
> Progress 0.0%, elapsed 18.0 s, iters = (3733, 0), opt = 0.954
> Progress 0.0%, elapsed 21.0 s, iters = (4342, 0), opt = 0.954
2022-06-05 14:46:38,915 - property.py - New opt = 0.9549174456622365.
> Progress 0.0%, elapsed 24.0 s, iters = (4964, 0), opt = 0.955
> Progress 0.0%, elapsed 27.0 s, iters = (5590, 0), opt = 0.955
> Progress 0.0%, elapsed 30.0 s, iters = (6217, 0), opt = 0.955
> Progress 0.0%, elapsed 33.0 s, iters = (6842, 0), opt = 0.955
2022-06-05 14:46:50,727 - property.py - New opt = 0.9556033306237914.
2022-06-05 14:46:51,112 - property.py - New opt = 0.9558733471166784.
2022-06-05 14:46:52,193 - property.py - New opt = 0.9561589023528458.
2022-06-05 14:46:52,258 - property.py - New opt = 0.9564138087675663.
> Progress 0.0%, elapsed 36.0 s, iters = (7458, 0), opt = 0.956
> Progress 0.0%, elapsed 39.0 s, iters = (8072, 0), opt = 0.956
2022-06-05 14:46:56,082 - property.py - New opt = 0.95672000769505.
2022-06-05 14:46:56,362 - property.py - New opt = 0.9569975066676135.
2022-06-05 14:46:56,530 - property.py - New opt = 0.9578832603183477.
> Progress 0.0%, elapsed 42.0 s, iters = (8682, 0), opt = 0.958
2022-06-05 14:47:00,861 - property.py - New opt = 0.9584537093644441.
2022-06-05 14:47:00,951 - property.py - New opt = 0.9591720119920039.
2022-06-05 14:47:01,697 - property.py - New opt = 0.9597762635595594.
> Progress 0.0%, elapsed 45.0 s, iters = (9298, 0), opt = 0.96
> Progress 0.0%, elapsed 48.0 s, iters = (9928, 0), opt = 0.96
> Progress 0.0%, elapsed 51.0 s, iters = (10542, 0), opt = 0.96
> Progress 0.0%, elapsed 54.0 s, iters = (11138, 0), opt = 0.96
> Progress 0.0%, elapsed 57.0 s, iters = (11774, 0), opt = 0.96
> Progress 0.0%, elapsed 60.0 s, iters = (12418, 0), opt = 0.96
> Progress 0.0%, elapsed 63.0 s, iters = (13030, 0), opt = 0.96
> Progress 0.0%, elapsed 66.0 s, iters = (13663, 0), opt = 0.96
> Progress 0.0%, elapsed 69.0 s, iters = (14304, 0), opt = 0.96
> Progress 0.0%, elapsed 72.0 s, iters = (14961, 0), opt = 0.96
> Progress 0.0%, elapsed 75.0 s, iters = (15580, 0), opt = 0.96
> Progress 0.0%, elapsed 78.0 s, iters = (16217, 0), opt = 0.96
2022-06-05 14:47:37,595 - property.py - New opt = 0.9600626091314679.
> Progress 0.0%, elapsed 81.0 s, iters = (16823, 0), opt = 0.96
> Progress 0.0%, elapsed 84.0 s, iters = (17429, 0), opt = 0.96
> Progress 0.0%, elapsed 87.0 s, iters = (18057, 0), opt = 0.96
> Progress 0.0%, elapsed 90.0 s, iters = (18690, 0), opt = 0.96
> Progress 0.0%, elapsed 93.0 s, iters = (19313, 0), opt = 0.96
> Progress 0.0%, elapsed 96.0 s, iters = (19930, 0), opt = 0.96
> Progress 0.0%, elapsed 99.0 s, iters = (20517, 0), opt = 0.96
> Progress 0.0%, elapsed 102.0 s, iters = (21125, 0), opt = 0.96
> Progress 0.0%, elapsed 105.0 s, iters = (21723, 0), opt = 0.96
> Progress 0.0%, elapsed 108.0 s, iters = (22339, 0), opt = 0.96
2022-06-05 14:48:06,519 - property.py - New opt = 0.9602481759912342.
2022-06-05 14:48:06,547 - property.py - New opt = 0.9604478549777358.
2022-06-05 14:48:07,693 - property.py - New opt = 0.9606438666876803.
> Progress 0.0%, elapsed 111.0 s, iters = (22963, 0), opt = 0.961
> Progress 0.0%, elapsed 114.0 s, iters = (23590, 0), opt = 0.961
> Progress 0.0%, elapsed 117.0 s, iters = (24244, 0), opt = 0.961
> Progress 0.0%, elapsed 120.0 s, iters = (24894, 0), opt = 0.961
> Progress 0.0%, elapsed 123.0 s, iters = (25532, 0), opt = 0.961
> Progress 0.0%, elapsed 126.0 s, iters = (26151, 0), opt = 0.961
> Progress 0.0%, elapsed 129.0 s, iters = (26735, 0), opt = 0.961
> Progress 0.0%, elapsed 132.0 s, iters = (27342, 0), opt = 0.961
> Progress 0.0%, elapsed 135.0 s, iters = (27958, 0), opt = 0.961
> Progress 0.0%, elapsed 138.0 s, iters = (28583, 0), opt = 0.961
> Progress 0.0%, elapsed 141.0 s, iters = (29185, 0), opt = 0.961
> Progress 0.0%, elapsed 144.0 s, iters = (29801, 0), opt = 0.961
> Progress 0.0%, elapsed 147.0 s, iters = (30447, 0), opt = 0.961
> Progress 0.0%, elapsed 150.0 s, iters = (31103, 0), opt = 0.961
> Progress 0.0%, elapsed 153.0 s, iters = (31755, 0), opt = 0.961
> Progress 0.0%, elapsed 156.0 s, iters = (32417, 0), opt = 0.961
> Progress 0.0%, elapsed 159.0 s, iters = (33053, 0), opt = 0.961
> Progress 0.0%, elapsed 162.0 s, iters = (33686, 0), opt = 0.961
> Progress 0.0%, elapsed 165.0 s, iters = (34325, 0), opt = 0.961
2022-06-05 14:49:04,701 - property.py - New opt = 0.961397573895652.
> Progress 0.0%, elapsed 168.0 s, iters = (34935, 0), opt = 0.961
> Progress 0.0%, elapsed 171.0 s, iters = (35558, 0), opt = 0.961
> Progress 0.0%, elapsed 174.0 s, iters = (36173, 0), opt = 0.961
> Progress 0.0%, elapsed 177.0 s, iters = (36801, 0), opt = 0.961
> Progress 0.0%, elapsed 180.0 s, iters = (37426, 0), opt = 0.961
> Progress 0.0%, elapsed 183.0 s, iters = (38056, 0), opt = 0.961
> Progress 0.0%, elapsed 186.0 s, iters = (38678, 0), opt = 0.961
> Progress 0.0%, elapsed 189.0 s, iters = (39293, 0), opt = 0.961
> Progress 0.0%, elapsed 192.0 s, iters = (39939, 0), opt = 0.961
2022-06-05 14:49:30,319 - property.py - New opt = 0.9620638844697919.
> Progress 0.0%, elapsed 195.0 s, iters = (40576, 0), opt = 0.962
> Progress 0.0%, elapsed 198.0 s, iters = (41192, 0), opt = 0.962
> Progress 0.0%, elapsed 201.0 s, iters = (41791, 0), opt = 0.962
> Progress 0.0%, elapsed 204.0 s, iters = (42418, 0), opt = 0.962
> Progress 0.0%, elapsed 207.0 s, iters = (43036, 0), opt = 0.962
> Progress 0.0%, elapsed 210.0 s, iters = (43657, 0), opt = 0.962
> Progress 0.0%, elapsed 213.0 s, iters = (44284, 0), opt = 0.962
2022-06-05 14:49:51,214 - property.py - New opt = 0.9624345869029832.
2022-06-05 14:49:51,373 - property.py - New opt = 0.9627030144455371.
> Progress 0.0%, elapsed 216.0 s, iters = (44902, 0), opt = 0.963
> Progress 0.0%, elapsed 219.0 s, iters = (45515, 0), opt = 0.963
2022-06-05 14:49:57,298 - property.py - New opt = 0.9630114351374286.
> Progress 0.0%, elapsed 222.0 s, iters = (46119, 0), opt = 0.963
> Progress 0.0%, elapsed 225.0 s, iters = (46745, 0), opt = 0.963
2022-06-05 14:50:02,689 - property.py - New opt = 0.963290828975386.
2022-06-05 14:50:03,580 - property.py - New opt = 0.963535206950164.
> Progress 0.0%, elapsed 228.0 s, iters = (47354, 0), opt = 0.964
> Progress 0.0%, elapsed 231.0 s, iters = (47978, 0), opt = 0.964
> Progress 0.0%, elapsed 234.0 s, iters = (48621, 0), opt = 0.964
--------------------
Synthesis summary

optimality objective: Pmax=? ["notbad" U "goal"] 

method: AR, synthesis time: 235.8 s
number of holes: 351, family size: 21040543606193494028963959531520514662201359211292695437993123612274928617188323288454666145110353804907931875424712870852077729000735215452511259082607523399820894684513778392766655031537290869085173006943125504, super quotient: 1226 states / 2954 actions
explored: 0 %
AR stats: avg MDP size: 1226, iterations: 49014

optimal: 0.963535
--------------------

A([start & turn & dx=2 & dy=4 & seedx=4 & seedy=4],0)={'north'}, A([start & turn & dx=1 & dy=4 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=4 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedx=2 & seedy=3],0)={'west'}, A([start & turn & dy=1 & seedx=1 & seedy=3],0)={'north'}, A([start & turn & dx=1 & dy=3 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & seedx=1 & seedy=1],0)={'north'}, A([start & turn & dx=2 & seedx=1 & seedy=1],0)={'east'}, A([start & turn & dx=4 & dy=3 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=4 & seedy=2],0)={'south'}, A([start & turn & dy=1 & seedx=2 & seedy=2],0)={'west'}, A([start & turn & dx=2 & dy=2 & seedx=3],0)={'south'}, A([start & turn & dx=1 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=3 & dy=4 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=3 & dy=1 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=2 & seedx=2 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=4 & seedy=3],0)={'east'}, A([start & turn & dx=4 & dy=2 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedx=3 & seedy=3],0)={'north'}, A([start & turn & dx=2 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=4 & seedy=4],0)={'north'}, A([start & turn & dx=4 & dy=2 & seedx=2 & seedy=3],0)={'south'}, A([start & turn & dx=4 & dy=3 & seedx=2 & seedy=3],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=4 & seedy=4],0)={'north'}, A([start & turn & dy=2 & seedx=1 & seedy=4],0)={'west'}, A([start & turn & dx=2 & seedx=-1 & seedy=-1],0)={'north'}, A([start & turn & dx=4 & dy=2 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedy=2],0)={'east'}, A([start & turn & dy=3 & seedx=2 & seedy=1],0)={'east'}, A([start & turn & dx=4 & dy=1 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=3 & dy=2 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedx=4 & seedy=2],0)={'south'}, A([start & turn & dx=3 & dy=4 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dy=3 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedx=3 & seedy=1],0)={'west'}, A([start & turn & dx=2 & seedy=1],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedy=4],0)={'east'}, A([start & turn & dy=4 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedy=1],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dy=3 & seedy=1],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=4 & seedy=4],0)={'west'}, A([start & turn & dx=3 & dy=4 & seedx=4 & seedy=3],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dx=2 & seedx=3 & seedy=1],0)={'west'}, A([start & turn & dx=2 & dy=1 & seedx=4],0)={'south'}, A([start & turn & seedx=2],0)={'south'}, A([start & turn & dx=1 & dy=3 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & dx=3 & dy=4 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=3 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=2 & dy=4 & seedx=4 & seedy=2],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedy=2],0)={'north'}, A([start & turn & dx=3 & dy=4 & seedx=4 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=2 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dy=4 & seedy=2],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedy=4],0)={'east'}, A([start & turn & dy=1 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=3 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=3 & seedx=4 & seedy=1],0)={'west'}, A([start & turn & dx=3 & dy=1 & seedx=-1 & seedy=-1],0)={'west'}, A([start & turn & dx=3 & dy=1 & seedx=4 & seedy=1],0)={'west'}, A([start & turn & dx=3 & dy=3 & seedx=2 & seedy=3],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=2 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=4 & seedx=2],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=3 & dy=1 & seedx=2],0)={'south'}, A([start & turn & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=2 & seedy=3],0)={'north'}, A([start & turn & dx=3 & dy=1 & seedx=2 & seedy=1],0)={'east'}, A([start & turn & dx=4 & dy=3 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & dx=2 & seedx=4 & seedy=2],0)={'south'}, A([start & turn & dx=1 & dy=3 & seedx=3 & seedy=4],0)={'north'}, A([start & turn & dx=1 & dy=1],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=1],0)={'south'}, A([start & turn & dx=2 & dy=2 & seedx=1],0)={'south'}, A([start & turn & dx=3 & dy=2 & seedx=2],0)={'south'}, A([start & turn & dx=3 & dy=2 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dy=2 & seedx=2],0)={'south'}, A([start & turn & dy=4 & seedx=2 & seedy=3],0)={'south'}, A([start & turn & dx=2 & dy=2 & seedy=4],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dy=4 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dy=1 & seedx=2],0)={'south'}, A([start & turn & dy=2 & seedx=1 & seedy=3],0)={'north'}, A([start & turn & dx=4 & dy=1 & seedx=2 & seedy=3],0)={'south'}, A([start & turn & dx=1 & seedx=2 & seedy=2],0)={'north'}, A([start & turn & dx=2 & dy=3 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=2 & dy=2 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=2 & dy=1 & seedx=3],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=3 & seedy=4],0)={'east'}, A([start & turn & dx=2 & dy=4 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=3 & dy=1 & seedx=4],0)={'south'}, A([start & turn & dx=2 & dy=2 & seedx=4],0)={'south'}, A([start & turn & dy=3 & seedx=1 & seedy=4],0)={'north'}, A([start & turn & dx=1 & seedx=3],0)={'south'}, A([start & turn & dy=2 & seedx=2 & seedy=4],0)={'east'}, A([start & turn & dx=3 & dy=3 & seedx=1 & seedy=4],0)={'east'}, A([start & turn & dx=4 & dy=3 & seedx=2 & seedy=4],0)={'south'}, A([start & turn & dy=2 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=4 & dy=1 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=1 & seedx=2 & seedy=1],0)={'west'}, A([start & turn & dx=1 & dy=2],0)={'south'}, A([start & turn & dx=3 & dy=4 & seedx=3 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=1 & seedx=1 & seedy=2],0)={'north'}, A([start & turn & dx=2 & dy=3 & seedx=4 & seedy=4],0)={'north'}, A([start & turn & dx=2 & dy=3 & seedx=1 & seedy=4],0)={'east'}, A([start & turn & dx=4 & seedx=3 & seedy=2],0)={'north'}, A([start & turn & dx=1 & dy=2 & seedx=1 & seedy=3],0)={'north'}, A([start & turn & dx=4 & dy=2 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=3 & dy=1 & seedx=3 & seedy=3],0)={'west'}, A([start & turn & dy=1 & seedx=1 & seedy=2],0)={'north'}, A([start & turn & dx=2 & dy=1 & seedx=3 & seedy=3],0)={'north'}, A([start & turn & dx=4 & dy=2 & seedx=2],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=4 & dy=2 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=3 & seedy=3],0)={'north'}, A([start & turn & dx=2 & dy=2 & seedx=4 & seedy=2],0)={'south'}, A([start & turn & dy=4 & seedx=1 & seedy=3],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedx=2 & seedy=3],0)={'north'}, A([start & turn & dx=1 & seedy=1],0)={'east'}, A([start & turn & dx=4 & dy=1 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=1 & dy=4 & seedx=2 & seedy=4],0)={'west'}, A([start & turn & dx=4 & dy=3 & seedx=4 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedx=3 & seedy=4],0)={'west'}, A([start & turn & dx=3 & seedx=2 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=4 & seedx=3 & seedy=3],0)={'west'}, A([start & turn & dx=3 & dy=3 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=3 & dy=2 & seedx=1 & seedy=1],0)={'east'}, A([start & turn & dx=3 & dy=1 & seedx=4 & seedy=3],0)={'west'}, A([start & turn & dx=2 & dy=2 & seedx=4 & seedy=3],0)={'north'}, A([start & turn & dx=2 & dy=2 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedx=3 & seedy=3],0)={'north'}, A([start & turn & dx=2 & dy=1 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=3 & seedy=3],0)={'north'}, A([start & turn & dx=3 & dy=2 & seedx=2 & seedy=4],0)={'east'}, A([start & turn & seedy=1],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=4 & seedy=2],0)={'west'}, A([start & turn & dx=4 & dy=1 & seedx=4 & seedy=2],0)={'west'}, A([start & turn & dx=2 & dy=4 & seedx=3 & seedy=2],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=1 & dy=3 & seedx=1 & seedy=2],0)={'south'}, A([start & turn & dy=3 & seedx=1 & seedy=2],0)={'south'}, A([start & turn & dx=2 & seedx=3],0)={'south'}, A([start & turn & dy=3 & seedx=2 & seedy=2],0)={'west'}, A([start & turn & dx=2 & dy=4 & seedy=2],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedy=4],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedx=3 & seedy=4],0)={'north'}, A([start & turn & dx=3 & seedx=3 & seedy=1],0)={'west'}, A([start & turn & dx=4 & dy=2 & seedx=4],0)={'south'}, A([start & turn & dx=3 & dy=4 & seedx=2 & seedy=3],0)={'east'}, A([start & turn & dy=4 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=3 & seedx=3 & seedy=2],0)={'west'}, A([start & turn & dx=1 & dy=2 & seedy=4],0)={'east'}, A([start & turn & dx=3 & dy=4 & seedx=1 & seedy=4],0)={'east'}, A([start & turn & dx=2 & seedx=4 & seedy=1],0)={'north'}, A([start & turn & dy=4 & seedx=1 & seedy=4],0)={'north'}, A([start & turn & dx=3 & dy=1 & seedx=1],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=3],0)={'south'}, A([start & turn & dx=1 & dy=4 & seedy=3],0)={'east'}, A([start & turn & dx=1 & dy=2 & seedy=3],0)={'east'}, A([start & turn & dx=3 & dy=1 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedx=2 & seedy=3],0)={'east'}, A([start & turn & dy=2 & seedx=1 & seedy=2],0)={'south'}, A([start & turn & dx=3 & seedx=1 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=2 & seedx=1],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=4 & seedy=3],0)={'west'}, A([start & turn & dx=1 & dy=1 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=4 & dy=1 & seedx=4 & seedy=3],0)={'west'}, A([start & turn & dy=1 & seedy=2],0)={'north'}, A([start & turn & dx=1 & dy=4 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=1 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=2 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dy=1 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=4 & dy=3 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=3 & seedy=2],0)={'west'}, A([start & turn & dx=2 & dy=1 & seedx=3 & seedy=2],0)={'west'}, A([start & turn & dx=4 & dy=1 & seedx=3 & seedy=2],0)={'north'}, A([start & turn & dx=2 & dy=4 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=3 & seedx=2],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedx=4 & seedy=3],0)={'north'}, A([start & turn & dx=2 & dy=2 & seedx=2],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=3 & dy=1 & seedx=3],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedx=1 & seedy=4],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedx=4 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=2 & seedx=4 & seedy=1],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=4 & seedy=3],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=2 & seedy=1],0)={'west'}, A([start & turn & dy=4 & seedx=2 & seedy=4],0)={'north'}, A([start & turn & dx=2 & seedx=3 & seedy=2],0)={'west'}, A([start & turn & dx=1 & dy=3 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=2 & seedx=2],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=1 & dy=3 & seedx=1 & seedy=4],0)={'north'}, A([start & turn & dx=1 & dy=4 & seedx=3 & seedy=3],0)={'south'}, A([start & turn & dy=1 & seedy=3],0)={'east'}, A([start & turn & dx=3 & dy=4 & seedx=4 & seedy=4],0)={'east'}, A([start & turn & dx=1 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=3 & dy=1 & seedx=4 & seedy=2],0)={'west'}, A([start & turn & dy=2 & seedy=4],0)={'east'}, A([start & turn & dx=4 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=4 & dy=1 & seedx=2],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedx=2 & seedy=2],0)={'west'}, A([start & turn & dx=3 & dy=2 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=3 & dy=1 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=4 & dy=3 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=4 & dy=1 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dy=3 & seedx=1 & seedy=1],0)={'west'}, A([start & turn & dx=1 & dy=2 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dy=3 & seedy=4],0)={'north'}, A([start & turn & dx=3 & dy=1 & seedx=2 & seedy=3],0)={'east'}, A([start & turn & dx=4 & dy=3 & seedx=3 & seedy=4],0)={'south'}, A([start & turn & dy=3 & seedy=2],0)={'east'}, A([start & turn & dx=3 & dy=1 & seedx=3 & seedy=2],0)={'north'}, A([start & turn & dx=4 & dy=1 & seedx=3],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=4 & dy=2 & seedx=3 & seedy=4],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=4 & dy=2 & seedx=3],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedy=1],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dy=1 & seedx=1],0)={'south'}, A([start & turn & dx=2 & dy=1 & seedx=4 & seedy=1],0)={'south'}, A([start & turn & dy=4 & seedy=3],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedx=2 & seedy=3],0)={'west'}, A([start & turn & dx=2 & dy=2 & seedx=2 & seedy=4],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedy=2],0)={'east'}, A([start & turn & dy=2 & seedx=2 & seedy=3],0)={'north'}, A([start & turn & dx=3 & dy=2 & seedx=1 & seedy=4],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dy=2],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=4 & seedx=3 & seedy=1],0)={'north'}, A([start & turn & dx=4 & seedx=4 & seedy=2],0)={'west'}, A([start & turn & dx=3 & dy=4 & seedx=3 & seedy=2],0)={'east'}, A([start & turn & dx=2 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=2 & seedx=3 & seedy=4],0)={'east'}, A([start & turn & dx=1 & dy=1 & seedx=2],0)={'south'}, A([start & turn & dy=3 & seedx=1 & seedy=3],0)={'north'}, A([start & turn & dx=2 & dy=2 & seedx=3 & seedy=2],0)={'west'}, A([start & turn & dy=2 & seedx=1],0)={'south'}, A([start & turn & dx=4 & dy=3 & seedx=3 & seedy=3],0)={'south'}, A([start & turn & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedx=2 & seedy=3],0)={'east'}, A([start & turn & seedx=1],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedx=3],0)={'south'}, A([start & turn & dx=4 & dy=3 & seedx=4 & seedy=2],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedy=4],0)={'east'}, A([start & turn & dx=2],0)={'east'}, A([start & turn & dx=4 & seedx=3],0)={'south'}, A([start & turn & dx=4 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=1 & seedy=2],0)={'east'}, A([start & turn & dx=2 & seedy=2],0)={'east'}, A([start & turn & dx=4 & dy=2 & seedx=2 & seedy=4],0)={'south'}, A([start & turn & dy=2 & seedy=1],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedx=1],0)={'south'}, A([start & turn & dy=3 & seedx=2 & seedy=3],0)={'north'}, A([start & turn & dx=3 & dy=2 & seedx=3],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedx=2 & seedy=4],0)={'north'}, A([start & turn & dx=3 & dy=3 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dy=1 & seedx=2 & seedy=3],0)={'north'}, A([start & turn & dx=4 & dy=2 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=4 & dy=2 & seedx=3 & seedy=3],0)={'north'}, A([start & turn & dx=1 & dy=3 & seedy=3],0)={'east'}, A([start & turn & dx=1 & dy=1 & seedy=2],0)={'east'}, A([start & turn & dx=4 & dy=2 & seedx=4 & seedy=3],0)={'north'}, A([start & turn & dx=3 & dy=2 & seedx=4],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedx=3 & seedy=3],0)={'west'}, A([start & turn & dx=1 & dy=3 & seedx=2 & seedy=4],0)={'north'}, A([start & turn & dx=4 & seedx=4 & seedy=1],0)={'west'}, A([start & turn & dx=3 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & dx=2 & dy=1 & seedx=1 & seedy=1],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedx=3 & seedy=4],0)={'north'}, A([start & turn & dx=2 & dy=2],0)={'south'}, A([start & turn & dx=2 & dy=1 & seedx=2],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=4 & seedy=1],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedx=1],0)={'south'}, A([start & turn & dx=1 & seedx=2],0)={'south'}, A([start & turn & dx=4 & dy=2 & seedx=4 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=1 & seedx=2 & seedy=2],0)={'north'}, A([start & turn & dx=3 & dy=2 & seedx=3 & seedy=4],0)={'north'}, A([start & turn & dx=2 & dy=1 & seedy=3],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedx=2 & seedy=4],0)={'north'}, A([start & turn & dx=1 & dy=1 & seedx=2 & seedy=2],0)={'west'}, A([start & turn & dx=3 & seedx=4 & seedy=2],0)={'west'}, A([start & turn & dx=4 & dy=1 & seedx=3 & seedy=3],0)={'east'}, A([start & turn & dx=3 & dy=3 & seedx=2 & seedy=4],0)={'east'}, A([start & turn & dx=1 & dy=2 & seedx=1 & seedy=4],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedx=4 & seedy=3],0)={'north'}, A([start & turn & dx=4 & dy=3 & seedx=4 & seedy=4],0)={'south'}, A([start & turn & dx=3 & seedx=1],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & seedx=1 & seedy=2],0)={'north'}, A([start & turn & dx=1 & dy=2 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=1 & seedx=1 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedy=2],0)={'east'}, A([start & turn & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dy=2 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=3 & dy=2 & seedx=1],0)={'south'}, A([start & turn & dx=1],0)={'east'}, A([start & turn & dx=3 & dy=4 & seedx=2 & seedy=4],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedx=3 & seedy=2],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=4 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=3 & dy=3 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedx=4 & seedy=3],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=3 & seedy=4],0)={'north'}, A([start & turn & dy=2 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=2 & seedy=3],0)={'north'}, A([start & turn & dx=3 & seedx=4],0)={'west'}, A([start & turn & dy=2 & seedy=3],0)={'east'}, A([start & turn & dx=4 & dy=1 & seedx=4],0)={'south'}, A([start & turn & dx=4 & dy=3 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=2 & seedx=1 & seedy=4],0)={'east'}, A([start & turn & dx=3 & dy=4 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dy=2 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=1],0)={'south'}, A([start & turn & dx=3 & dy=2 & seedx=3 & seedy=3],0)={'north'}, A([start & turn & dx=2 & seedx=4],0)={'south'}, A([start & turn & dy=3 & seedx=2 & seedy=4],0)={'north'}, A([start & turn & dx=1 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dy=1 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dy=1],0)={'south'}, A([start & turn & dx=4 & dy=2 & seedx=4 & seedy=4],0)={'west'}, A([start & turn & dx=1 & dy=2 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & dx=2 & dy=1 & seedx=4 & seedy=2],0)={'west'}, A([start & turn & dx=3 & dy=1 & seedx=1 & seedy=1],0)={'east'}

hole scores:  {0: 9.557630812387186e-05, 1: 8.135297657103643e-05, 2: 3.0082757331552614e-05, 6: 2.505012763754573e-05, 13: 9.789656058222517e-05, 22: 7.890964869430126e-05, 25: 5.906889208036647e-05, 26: 0.0007628972601087714, 29: 4.891590505995503e-05, 30: 3.408339180981258e-05, 34: 2.573470530217599e-05, 60: 2.9593324999690686e-05, 75: 0.0024616972477384, 102: 4.40178196361589e-05, 118: 3.633360173683917e-05, 125: 4.783768516611545e-05, 140: 5.4986049923764285e-05, 141: 3.0600502172039254e-05, 147: 4.5524916170766496e-05, 148: 9.881463467131658e-05, 153: 0.00018178978626880627, 166: 0.0009052769151595353, 184: 0.0004153831974727177, 195: 6.161744188025175e-05, 213: 0.00010509236461430491, 216: 0.001270699093846701, 226: 5.29030002822064e-05, 236: 0.00012446867457483588, 242: 9.392258536255026e-05, 256: 0.00012512675317558663, 299: 3.112776586200308e-05, 303: 2.7339086449098944e-05, 307: 0.00010563612861803155, 310: 9.900461297012739e-05, 327: 0.00022269302079270408, 347: 4.802760883044103e-05, 348: 4.6339133402408225e-05}
selected hole:  75
hole has options:  [3]
2022-06-05 14:50:12,742 - synthesizer_pomdp.py - FSC synthesis: elapsed 235.8 s, opt = 0.964, injections: 0.
2022-06-05 14:50:12,742 - synthesizer_pomdp.py - Injecting memory into observation 157 ...
2022-06-05 14:50:12,742 - quotient_pomdp.py - Unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2022-06-05 14:50:12,743 - quotient_pomdp.py - Constructed quotient MDP having 1227 states and 2971 actions.

------------------------------------------------------------

2022-06-05 14:50:12,865 - quotient_pomdp.py - Symmetry breaking: reduced design space from 1346594790796383617853693410017312938380886989522732508031559911185595431500052690461098633287062643514107640027181623734532974656047053788960720581286881497588537259808881817137065922018386615621451072444360032256 to 1346594790796383617853693410017312938380886989522732508031559911185595431500052690461098633287062643514107640027181623734532974656047053788960720581286881497588537259808881817137065922018386615621451072444360032256
2022-06-05 14:50:12,871 - synthesizer.py - Synthesis initiated.
> Progress 0.0%, elapsed 3.0 s, iters = (620, 0), opt = 0.964
> Progress 0.0%, elapsed 6.0 s, iters = (1253, 0), opt = 0.964
> Progress 0.0%, elapsed 9.0 s, iters = (1889, 0), opt = 0.964
> Progress 0.0%, elapsed 12.0 s, iters = (2527, 0), opt = 0.964
> Progress 0.0%, elapsed 15.0 s, iters = (3142, 0), opt = 0.964
> Progress 0.0%, elapsed 18.0 s, iters = (3750, 0), opt = 0.964
> Progress 0.0%, elapsed 21.0 s, iters = (4370, 0), opt = 0.964
> Progress 0.0%, elapsed 24.0 s, iters = (4970, 0), opt = 0.964
> Progress 0.0%, elapsed 27.0 s, iters = (5568, 0), opt = 0.964
> Progress 0.0%, elapsed 30.0 s, iters = (6163, 0), opt = 0.964
> Progress 0.0%, elapsed 33.0 s, iters = (6789, 0), opt = 0.964
--------------------
Synthesis summary

optimality objective: Pmax=? ["notbad" U "goal"] 

method: AR, synthesis time: 35.64 s
number of holes: 356, family size: 1346594790796383617853693410017312938380886989522732508031559911185595431500052690461098633287062643514107640027181623734532974656047053788960720581286881497588537259808881817137065922018386615621451072444360032256, super quotient: 1227 states / 2971 actions
explored: 0 %
AR stats: avg MDP size: 1227, iterations: 7346

optimal: 0.963535
--------------------

None

hole scores:  {1: 0.00018975649772340062, 2: 0.00021443662498340057, 6: 1.703007772195572e-05, 14: 0.00039328404951827206, 27: 0.00029786235626668865, 31: 0.0002563897963578588, 35: 0.0001491911489729452, 53: 0.00020124006725058825, 57: 1.2199310105744793e-05, 60: 0.00029263067406729286, 61: 8.724410108163977e-05, 64: 1.7527978159955672e-05, 72: 0.0003193241883280004, 89: 0.00015872897811091183, 107: 0.0002061924760074411, 144: 9.677761772689508e-06}
selected hole:  14
hole has options:  [1, 2, 3]
2022-06-05 14:50:48,511 - synthesizer_pomdp.py - FSC synthesis: elapsed 271.6 s, opt = 0.964, injections: 1.
2022-06-05 14:50:48,511 - synthesizer_pomdp.py - Injecting memory into observation 38 ...
2022-06-05 14:50:48,511 - quotient_pomdp.py - Unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2022-06-05 14:50:48,512 - quotient_pomdp.py - Constructed quotient MDP having 1240 states and 3042 actions.

------------------------------------------------------------

2022-06-05 14:50:48,644 - quotient_pomdp.py - Symmetry breaking: reduced design space from 689456532887748412341091025928864224451014138635639044112158674527024860928026977516082500242976073479223111693916991352080883023896091539947888937618883326765331077022147490374177752073413947198182949091512336515072 to 258546199832905654627909134723324084169130301988364641542059502947634322848010116568530937591116027554708666885218871757030331133961034327480458351607081247536999153883305308890316657027530230199318605909317126193152
2022-06-05 14:50:48,651 - synthesizer.py - Synthesis initiated.
> Progress 0.0%, elapsed 3.0 s, iters = (576, 0), opt = 0.964
> Progress 0.0%, elapsed 6.0 s, iters = (1147, 0), opt = 0.964
2022-06-05 14:50:57,617 - property.py - New opt = 0.963831624661025.
> Progress 0.0%, elapsed 9.0 s, iters = (1739, 0), opt = 0.964
> Progress 0.0%, elapsed 12.0 s, iters = (2329, 0), opt = 0.964
> Progress 0.0%, elapsed 15.0 s, iters = (2885, 0), opt = 0.964
2022-06-05 14:51:04,848 - property.py - New opt = 0.9646298428322632.
> Progress 0.0%, elapsed 18.0 s, iters = (3472, 0), opt = 0.965
> Progress 0.0%, elapsed 21.0 s, iters = (4057, 0), opt = 0.965
> Progress 0.0%, elapsed 24.0 s, iters = (4641, 0), opt = 0.965
> Progress 0.0%, elapsed 27.0 s, iters = (5238, 0), opt = 0.965
> Progress 0.0%, elapsed 30.0 s, iters = (5839, 0), opt = 0.965
> Progress 0.0%, elapsed 33.0 s, iters = (6441, 0), opt = 0.965
> Progress 0.0%, elapsed 36.0 s, iters = (7056, 0), opt = 0.965
> Progress 0.0%, elapsed 39.0 s, iters = (7651, 0), opt = 0.965
> Progress 0.0%, elapsed 42.0 s, iters = (8232, 0), opt = 0.965
> Progress 0.0%, elapsed 45.0 s, iters = (8826, 0), opt = 0.965
> Progress 0.0%, elapsed 48.0 s, iters = (9406, 0), opt = 0.965
> Progress 0.0%, elapsed 51.0 s, iters = (9996, 0), opt = 0.965
2022-06-05 14:51:42,183 - property.py - New opt = 0.9648914095066637.
> Progress 0.0%, elapsed 54.0 s, iters = (10606, 0), opt = 0.965
> Progress 0.0%, elapsed 57.0 s, iters = (11191, 0), opt = 0.965
> Progress 0.0%, elapsed 60.0 s, iters = (11781, 0), opt = 0.965
> Progress 0.0%, elapsed 63.0 s, iters = (12393, 0), opt = 0.965
> Progress 0.0%, elapsed 66.0 s, iters = (12994, 0), opt = 0.965
> Progress 0.0%, elapsed 69.0 s, iters = (13608, 0), opt = 0.965
> Progress 0.0%, elapsed 72.0 s, iters = (14207, 0), opt = 0.965
--------------------
Synthesis summary

optimality objective: Pmax=? ["notbad" U "goal"] 

method: AR, synthesis time: 72.72 s
number of holes: 364, family size: 689456532887748412341091025928864224451014138635639044112158674527024860928026977516082500242976073479223111693916991352080883023896091539947888937618883326765331077022147490374177752073413947198182949091512336515072, super quotient: 1240 states / 3042 actions
explored: 0 %
AR stats: avg MDP size: 1237, iterations: 14349

optimal: 0.964891
--------------------

A([start & turn & dx=2 & dy=4 & seedx=4 & seedy=4],0)={'north'}, A([start & turn & dx=1 & dy=4 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=4 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedx=2 & seedy=3],0)={'west'}, A([start & turn & dy=1 & seedx=1 & seedy=3],0)={'north'}, A([start & turn & dx=1 & dy=3 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & seedx=1 & seedy=1],0)={'north'}, A([start & turn & dx=2 & seedx=1 & seedy=1],0)={'east'}, M([start & !turn & dx=2 & seedx=-1 & seedy=-1],0)=0, A([start & turn & dx=4 & dy=3 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=4 & seedy=2],0)={'south'}, A([start & turn & dy=1 & seedx=2 & seedy=2],0)={'west'}, A([start & turn & dx=2 & dy=2 & seedx=3],0)={'south'}, A([start & turn & dx=1 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=1 & seedx=-1 & seedy=-1],1)={'east'}, A([start & turn & dx=3 & dy=4 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=3 & dy=1 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=2 & seedx=2 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=4 & seedy=3],0)={'east'}, A([start & turn & dx=4 & dy=2 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedx=3 & seedy=3],0)={'north'}, A([start & turn & dx=2 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=4 & seedy=4],0)={'north'}, A([start & turn & dx=4 & dy=2 & seedx=2 & seedy=3],0)={'south'}, A([start & turn & dx=4 & dy=3 & seedx=2 & seedy=3],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=4 & seedy=4],0)={'north'}, A([start & turn & dy=2 & seedx=1 & seedy=4],0)={'west'}, A([start & turn & dx=2 & seedx=-1 & seedy=-1],0)={'north'}, A([start & turn & dx=4 & dy=2 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedy=2],0)={'east'}, A([start & turn & dy=3 & seedx=2 & seedy=1],0)={'east'}, A([start & turn & dx=4 & dy=1 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=3 & dy=2 & seedx=1 & seedy=3],0)={'east'}, M([start & !turn & dx=1 & seedx=-1 & seedy=-1],0)=1, A([start & turn & dx=2 & dy=3 & seedx=4 & seedy=2],0)={'south'}, A([start & turn & dx=3 & dy=4 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dy=3 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedx=3 & seedy=1],0)={'west'}, A([start & turn & dx=2 & seedy=1],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedy=4],0)={'east'}, A([start & turn & dy=4 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedy=1],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dy=3 & seedy=1],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=4 & seedy=4],0)={'west'}, A([start & turn & dx=3 & dy=4 & seedx=4 & seedy=3],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dx=2 & seedx=3 & seedy=1],0)={'west'}, A([start & turn & dx=2 & dy=1 & seedx=4],0)={'south'}, A([start & turn & seedx=2],0)={'south'}, A([start & turn & dx=1 & dy=3 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & dx=3 & dy=4 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=3 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=2 & dy=4 & seedx=4 & seedy=2],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedy=2],0)={'north'}, A([start & turn & dx=3 & dy=4 & seedx=4 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=2 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dy=4 & seedy=2],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedy=4],0)={'east'}, A([start & turn & dy=1 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=3 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=3 & seedx=4 & seedy=1],0)={'west'}, A([start & turn & dx=3 & dy=1 & seedx=-1 & seedy=-1],0)={'west'}, A([start & turn & dx=3 & dy=1 & seedx=4 & seedy=1],0)={'west'}, A([start & turn & dx=3 & dy=3 & seedx=2 & seedy=3],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=2 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=4 & seedx=2],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=3 & dy=1 & seedx=2],0)={'south'}, A([start & turn & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=2 & seedy=3],0)={'north'}, A([start & turn & dx=3 & dy=1 & seedx=2 & seedy=1],0)={'east'}, A([start & turn & dx=4 & dy=3 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & dx=2 & seedx=4 & seedy=2],0)={'south'}, A([start & turn & dx=2 & seedx=4 & seedy=2],1)={'north'}, A([start & turn & dx=1 & dy=3 & seedx=3 & seedy=4],0)={'north'}, A([start & turn & dx=1 & dy=1],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=1],0)={'south'}, A([start & turn & dx=2 & dy=2 & seedx=1],0)={'south'}, A([start & turn & dx=3 & dy=2 & seedx=2],0)={'south'}, A([start & turn & dx=3 & dy=2 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dy=2 & seedx=2],0)={'south'}, A([start & turn & dy=4 & seedx=2 & seedy=3],0)={'south'}, A([start & turn & dx=2 & dy=2 & seedy=4],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dy=4 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dy=1 & seedx=2],0)={'south'}, A([start & turn & dy=2 & seedx=1 & seedy=3],0)={'north'}, A([start & turn & dx=4 & dy=1 & seedx=2 & seedy=3],0)={'south'}, A([start & turn & dx=1 & seedx=2 & seedy=2],0)={'north'}, A([start & turn & dx=2 & dy=3 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=2 & dy=2 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=2 & dy=1 & seedx=3],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=3 & seedy=4],0)={'east'}, A([start & turn & dx=2 & dy=4 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=3 & dy=1 & seedx=4],0)={'south'}, A([start & turn & dx=2 & dy=2 & seedx=4],0)={'south'}, A([start & turn & dy=3 & seedx=1 & seedy=4],0)={'north'}, M([start & !turn & dx=1 & seedy=2],0)=1, A([start & turn & dx=1 & seedx=3],0)={'south'}, A([start & turn & dy=2 & seedx=2 & seedy=4],0)={'east'}, A([start & turn & dx=3 & dy=3 & seedx=1 & seedy=4],0)={'east'}, A([start & turn & dx=4 & dy=3 & seedx=2 & seedy=4],0)={'south'}, A([start & turn & dy=2 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=4 & dy=1 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=1 & seedx=2 & seedy=1],0)={'west'}, A([start & turn & dx=1 & dy=2],0)={'south'}, A([start & turn & dx=3 & dy=4 & seedx=3 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=1 & seedx=1 & seedy=2],0)={'north'}, A([start & turn & dx=2 & dy=3 & seedx=4 & seedy=4],0)={'north'}, A([start & turn & dx=2 & dy=3 & seedx=1 & seedy=4],0)={'east'}, A([start & turn & dx=4 & seedx=3 & seedy=2],0)={'north'}, A([start & turn & dx=1 & dy=2 & seedx=1 & seedy=3],0)={'north'}, A([start & turn & dx=4 & dy=2 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=3 & dy=1 & seedx=3 & seedy=3],0)={'west'}, A([start & turn & dy=1 & seedx=1 & seedy=2],0)={'north'}, A([start & turn & dx=2 & dy=1 & seedx=3 & seedy=3],0)={'north'}, A([start & turn & dx=4 & dy=2 & seedx=2],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=4 & dy=2 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=3 & seedy=3],0)={'north'}, A([start & turn & dx=2 & dy=2 & seedx=4 & seedy=2],0)={'south'}, A([start & turn & dy=4 & seedx=1 & seedy=3],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedx=2 & seedy=3],0)={'north'}, A([start & turn & dx=1 & seedy=1],0)={'east'}, A([start & turn & dx=4 & dy=1 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=1 & dy=4 & seedx=2 & seedy=4],0)={'west'}, A([start & turn & dx=4 & dy=3 & seedx=4 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedx=3 & seedy=4],0)={'west'}, A([start & turn & dx=3 & seedx=2 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=4 & seedx=3 & seedy=3],0)={'west'}, A([start & turn & dx=3 & dy=3 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=3 & dy=2 & seedx=1 & seedy=1],0)={'east'}, A([start & turn & dx=3 & dy=1 & seedx=4 & seedy=3],0)={'west'}, A([start & turn & dx=2 & dy=2 & seedx=4 & seedy=3],0)={'north'}, A([start & turn & dx=2 & dy=2 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedx=3 & seedy=3],0)={'north'}, M([start & !turn & dx=2 & seedx=3 & seedy=2],0)=0, A([start & turn & dx=2 & dy=1 & seedx=-1 & seedy=-1],0)={'north'}, A([start & turn & dx=2 & dy=2 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=3 & seedy=3],0)={'north'}, A([start & turn & dx=3 & dy=2 & seedx=2 & seedy=4],0)={'east'}, A([start & turn & seedy=1],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=4 & seedy=2],0)={'west'}, A([start & turn & dx=4 & dy=1 & seedx=4 & seedy=2],0)={'west'}, A([start & turn & dx=2 & dy=4 & seedx=3 & seedy=2],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=1 & dy=3 & seedx=1 & seedy=2],0)={'south'}, A([start & turn & dy=3 & seedx=1 & seedy=2],0)={'south'}, A([start & turn & dx=2 & seedx=3],0)={'west'}, A([start & turn & dy=3 & seedx=2 & seedy=2],0)={'west'}, A([start & turn & dx=2 & dy=4 & seedy=2],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedy=4],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedx=3 & seedy=4],0)={'north'}, A([start & turn & dx=3 & seedx=3 & seedy=1],0)={'west'}, A([start & turn & dx=4 & dy=2 & seedx=4],0)={'south'}, A([start & turn & dx=3 & dy=4 & seedx=2 & seedy=3],0)={'east'}, A([start & turn & dy=4 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=3 & seedx=3 & seedy=2],0)={'west'}, A([start & turn & dx=1 & dy=2 & seedy=4],0)={'east'}, A([start & turn & dx=3 & dy=4 & seedx=1 & seedy=4],0)={'east'}, A([start & turn & dx=2 & seedx=4 & seedy=1],0)={'north'}, A([start & turn & dy=4 & seedx=1 & seedy=4],0)={'north'}, A([start & turn & dx=3 & dy=1 & seedx=1],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=3],0)={'south'}, A([start & turn & dx=1 & dy=4 & seedy=3],0)={'east'}, A([start & turn & dx=1 & dy=2 & seedy=3],0)={'east'}, A([start & turn & dx=3 & dy=1 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedx=2 & seedy=3],0)={'east'}, M([start & !turn & dx=1 & seedx=3 & seedy=2],0)=0, A([start & turn & dy=2 & seedx=1 & seedy=2],0)={'south'}, A([start & turn & dx=3 & seedx=1 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=2 & seedx=1],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=4 & seedy=3],0)={'west'}, A([start & turn & dx=1 & dy=1 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=4 & dy=1 & seedx=4 & seedy=3],0)={'west'}, A([start & turn & dy=1 & seedy=2],0)={'north'}, M([start & !turn & dx=1 & seedx=1 & seedy=2],0)=1, A([start & turn & dx=1 & dy=4 & seedx=1 & seedy=2],0)={'east'}, M([start & !turn & dx=1 & seedx=3],0)=0, A([start & turn & dx=1 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=2 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dy=1 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=4 & dy=3 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=3 & seedy=2],0)={'west'}, A([start & turn & dx=2 & dy=1 & seedx=3 & seedy=2],0)={'west'}, A([start & turn & dx=4 & dy=1 & seedx=3 & seedy=2],0)={'north'}, A([start & turn & dx=2 & dy=4 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=3 & seedx=2],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedx=4 & seedy=3],0)={'north'}, A([start & turn & dx=2 & dy=2 & seedx=2],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=3 & dy=1 & seedx=3],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedx=1 & seedy=4],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedx=4 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=2 & seedx=4 & seedy=1],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=4 & seedy=3],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=2 & seedy=1],0)={'west'}, A([start & turn & dy=4 & seedx=2 & seedy=4],0)={'north'}, A([start & turn & dx=2 & seedx=3 & seedy=2],0)={'west'}, A([start & turn & dx=1 & dy=3 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=2 & seedx=2],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=1 & dy=3 & seedx=1 & seedy=4],0)={'north'}, M([start & !turn & dx=1 & seedx=2 & seedy=2],0)=1, A([start & turn & dx=1 & dy=4 & seedx=3 & seedy=3],0)={'south'}, A([start & turn & dy=1 & seedy=3],0)={'east'}, A([start & turn & dx=3 & dy=4 & seedx=4 & seedy=4],0)={'east'}, A([start & turn & dx=1 & seedx=3 & seedy=1],0)={'north'}, A([start & turn & dx=3 & dy=1 & seedx=4 & seedy=2],0)={'west'}, A([start & turn & dy=2 & seedy=4],0)={'east'}, A([start & turn & dx=4 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=4 & dy=1 & seedx=2],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedx=2 & seedy=2],0)={'west'}, A([start & turn & dx=3 & dy=2 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=3 & dy=1 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=4 & dy=3 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=4 & dy=1 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dy=3 & seedx=1 & seedy=1],0)={'west'}, A([start & turn & dx=1 & dy=2 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dy=3 & seedy=4],0)={'north'}, A([start & turn & dx=3 & dy=1 & seedx=2 & seedy=3],0)={'east'}, A([start & turn & dx=4 & dy=3 & seedx=3 & seedy=4],0)={'south'}, A([start & turn & dy=3 & seedy=2],0)={'east'}, A([start & turn & dx=3 & dy=1 & seedx=3 & seedy=2],0)={'north'}, A([start & turn & dx=4 & dy=1 & seedx=3],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=4 & dy=2 & seedx=3 & seedy=4],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=4 & dy=2 & seedx=3],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedy=1],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dy=1 & seedx=1],0)={'south'}, A([start & turn & dx=2 & dy=1 & seedx=4 & seedy=1],0)={'south'}, A([start & turn & dy=4 & seedy=3],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedx=2 & seedy=3],0)={'west'}, A([start & turn & dx=2 & dy=2 & seedx=2 & seedy=4],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedy=2],0)={'east'}, A([start & turn & dy=2 & seedx=2 & seedy=3],0)={'north'}, A([start & turn & dx=3 & dy=2 & seedx=1 & seedy=4],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dy=2],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=4 & seedx=3 & seedy=1],0)={'north'}, A([start & turn & dx=4 & seedx=4 & seedy=2],0)={'west'}, A([start & turn & dx=3 & dy=4 & seedx=3 & seedy=2],0)={'east'}, A([start & turn & dx=2 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=2 & seedx=3 & seedy=4],0)={'east'}, A([start & turn & dx=1 & dy=1 & seedx=2],0)={'south'}, A([start & turn & dy=3 & seedx=1 & seedy=3],0)={'north'}, A([start & turn & dx=2 & dy=2 & seedx=3 & seedy=2],0)={'west'}, A([start & turn & dy=2 & seedx=1],0)={'south'}, A([start & turn & dx=4 & dy=3 & seedx=3 & seedy=3],0)={'south'}, A([start & turn & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedx=2 & seedy=3],0)={'east'}, A([start & turn & seedx=1],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedx=3],0)={'south'}, A([start & turn & dx=4 & dy=3 & seedx=4 & seedy=2],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedy=4],0)={'east'}, A([start & turn & dx=2],0)={'east'}, A([start & turn & dx=4 & seedx=3],0)={'south'}, A([start & turn & dx=4 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=1 & seedy=2],0)={'east'}, A([start & turn & dx=2 & seedy=2],0)={'east'}, A([start & turn & dx=4 & dy=2 & seedx=2 & seedy=4],0)={'south'}, A([start & turn & dy=2 & seedy=1],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedx=1],0)={'south'}, A([start & turn & dy=3 & seedx=2 & seedy=3],0)={'north'}, A([start & turn & dx=3 & dy=2 & seedx=3],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedx=2 & seedy=4],0)={'north'}, A([start & turn & dx=3 & dy=3 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dy=1 & seedx=2 & seedy=3],0)={'north'}, A([start & turn & dx=4 & dy=2 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=4 & dy=2 & seedx=3 & seedy=3],0)={'north'}, A([start & turn & dx=1 & dy=3 & seedy=3],0)={'east'}, A([start & turn & dx=1 & dy=1 & seedy=2],0)={'east'}, A([start & turn & dx=4 & dy=2 & seedx=4 & seedy=3],0)={'north'}, A([start & turn & dx=3 & dy=2 & seedx=4],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedx=3 & seedy=3],0)={'west'}, A([start & turn & dx=1 & dy=3 & seedx=2 & seedy=4],0)={'north'}, A([start & turn & dx=4 & seedx=4 & seedy=1],0)={'west'}, A([start & turn & dx=3 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & dx=2 & dy=1 & seedx=1 & seedy=1],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedx=3 & seedy=4],0)={'north'}, A([start & turn & dx=2 & dy=2],0)={'south'}, A([start & turn & dx=2 & dy=1 & seedx=2],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=4 & seedy=1],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedx=1],0)={'south'}, A([start & turn & dx=1 & seedx=2],0)={'south'}, A([start & turn & dx=4 & dy=2 & seedx=4 & seedy=1],0)={'south'}, M([start & !turn & dx=1 & seedx=3 & seedy=1],0)=0, A([start & turn & dx=2 & dy=1 & seedx=2 & seedy=2],0)={'north'}, A([start & turn & dx=3 & dy=2 & seedx=3 & seedy=4],0)={'north'}, A([start & turn & dx=2 & dy=1 & seedy=3],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedx=2 & seedy=4],0)={'north'}, A([start & turn & dx=1 & dy=1 & seedx=2 & seedy=2],0)={'west'}, M([start & !turn & dx=2 & seedx=4 & seedy=1],0)=0, A([start & turn & dx=3 & seedx=4 & seedy=2],0)={'west'}, A([start & turn & dx=4 & dy=1 & seedx=3 & seedy=3],0)={'east'}, A([start & turn & dx=3 & dy=3 & seedx=2 & seedy=4],0)={'east'}, A([start & turn & dx=1 & dy=2 & seedx=1 & seedy=4],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedx=4 & seedy=3],0)={'north'}, A([start & turn & dx=4 & dy=3 & seedx=4 & seedy=4],0)={'south'}, A([start & turn & dx=3 & seedx=1],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & seedx=1 & seedy=2],0)={'north'}, A([start & turn & dx=1 & dy=2 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=1 & seedx=1 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedy=2],0)={'east'}, A([start & turn & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dy=2 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=3 & dy=2 & seedx=1],0)={'south'}, A([start & turn & dx=1],0)={'east'}, A([start & turn & dx=3 & dy=4 & seedx=2 & seedy=4],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedx=3 & seedy=2],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=4 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=3 & dy=3 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedx=4 & seedy=3],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=3 & seedy=4],0)={'north'}, A([start & turn & dy=2 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=2 & seedy=3],0)={'north'}, A([start & turn & dx=3 & seedx=4],0)={'west'}, A([start & turn & dy=2 & seedy=3],0)={'east'}, A([start & turn & dx=4 & dy=1 & seedx=4],0)={'south'}, A([start & turn & dx=4 & dy=3 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=2 & seedx=1 & seedy=4],0)={'east'}, M([start & !turn & dx=2 & seedx=4 & seedy=2],0)=0, A([start & turn & dx=3 & dy=4 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dy=2 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=1],0)={'south'}, A([start & turn & dx=3 & dy=2 & seedx=3 & seedy=3],0)={'north'}, A([start & turn & dx=2 & seedx=4],0)={'south'}, A([start & turn & dy=3 & seedx=2 & seedy=4],0)={'north'}, A([start & turn & dx=1 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dy=1 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dy=1],0)={'south'}, A([start & turn & dx=4 & dy=2 & seedx=4 & seedy=4],0)={'west'}, A([start & turn & dx=1 & dy=2 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & dx=2 & dy=1 & seedx=4 & seedy=2],0)={'west'}, A([start & turn & dx=3 & dy=1 & seedx=1 & seedy=1],0)={'east'}

hole scores:  {0: 0.00012390793183464412, 1: 0.0001104071486330022, 2: 2.885778404264299e-05, 6: 3.523980290913559e-05, 15: 3.934433901734299e-05, 24: 7.59774207136148e-05, 27: 6.738400099545093e-05, 28: 0.0007487901026004132, 31: 5.0242147211450764e-05, 32: 3.235530945538706e-05, 37: 2.8525045882334016e-05, 59: 3.0977163686214985e-05, 63: 4.8188424134355566e-05, 74: 2.5257077864359622e-05, 78: 0.0021848386049535006, 107: 4.990075937223265e-05, 130: 4.22852414097129e-05, 145: 7.066295169229288e-05, 153: 4.3143564944790564e-05, 154: 0.00010635043984845658, 172: 0.0006251729153828427, 193: 0.00045883302963970564, 204: 6.735226180366767e-05, 223: 0.0001325201403289318, 226: 0.0005336130958753806, 236: 5.1792502968393485e-05, 246: 0.00011927796819380676, 252: 8.03772790701134e-05, 266: 0.00019732608916492615, 309: 5.462141859879105e-05, 319: 9.572342463927171e-05, 322: 8.403713315676787e-05, 339: 0.0002705274128091214, 345: 2.5008652169981574e-05, 360: 4.5747469198777176e-05, 361: 5.703144036615806e-05}
selected hole:  78
hole has options:  [3]
2022-06-05 14:52:01,383 - synthesizer_pomdp.py - FSC synthesis: elapsed 344.5 s, opt = 0.965, injections: 2.
2022-06-05 14:52:01,383 - synthesizer_pomdp.py - Injecting memory into observation 157 ...
2022-06-05 14:52:01,383 - quotient_pomdp.py - Unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2022-06-05 14:52:01,384 - quotient_pomdp.py - Constructed quotient MDP having 1241 states and 3059 actions.

------------------------------------------------------------

2022-06-05 14:52:01,534 - quotient_pomdp.py - Symmetry breaking: reduced design space from 13961494790976905349907093275059500545133036307371690643271213159172253433792546294700670629920265487954268011801819074879637881233895853683944750986782387366997954309698486680077099479486632430763204719103124814430208 to 5235560546616339506215159978147312704424888615264383991226704934689595037672204860512751486220099557982850504425682153079864205462710945131479281620043395262624232866136932505028912304807487161536201769663671805411328
2022-06-05 14:52:01,541 - synthesizer.py - Synthesis initiated.
> Progress 0.0%, elapsed 3.0 s, iters = (560, 0), opt = 0.965
> Progress 0.0%, elapsed 6.0 s, iters = (1142, 0), opt = 0.965
> Progress 0.0%, elapsed 9.0 s, iters = (1724, 0), opt = 0.965
> Progress 0.0%, elapsed 12.0 s, iters = (2302, 0), opt = 0.965
> Progress 0.0%, elapsed 15.0 s, iters = (2883, 0), opt = 0.965
> Progress 0.0%, elapsed 18.0 s, iters = (3478, 0), opt = 0.965
> Progress 0.0%, elapsed 21.0 s, iters = (4062, 0), opt = 0.965
> Progress 0.0%, elapsed 24.0 s, iters = (4652, 0), opt = 0.965
> Progress 0.0%, elapsed 27.0 s, iters = (5252, 0), opt = 0.965
> Progress 0.0%, elapsed 30.0 s, iters = (5856, 0), opt = 0.965
> Progress 0.0%, elapsed 33.0 s, iters = (6455, 0), opt = 0.965
> Progress 0.0%, elapsed 36.0 s, iters = (7044, 0), opt = 0.965
> Progress 0.0%, elapsed 39.0 s, iters = (7645, 0), opt = 0.965
> Progress 0.0%, elapsed 42.0 s, iters = (8244, 0), opt = 0.965
> Progress 0.0%, elapsed 45.0 s, iters = (8834, 0), opt = 0.965
> Progress 0.0%, elapsed 48.0 s, iters = (9427, 0), opt = 0.965
> Progress 0.0%, elapsed 51.0 s, iters = (10030, 0), opt = 0.965
> Progress 0.0%, elapsed 54.0 s, iters = (10632, 0), opt = 0.965
> Progress 0.0%, elapsed 57.0 s, iters = (11225, 0), opt = 0.965
--------------------
Synthesis summary

optimality objective: Pmax=? ["notbad" U "goal"] 

method: AR, synthesis time: 59.16 s
number of holes: 365, family size: 13961494790976905349907093275059500545133036307371690643271213159172253433792546294700670629920265487954268011801819074879637881233895853683944750986782387366997954309698486680077099479486632430763204719103124814430208, super quotient: 1241 states / 3059 actions
explored: 0 %
AR stats: avg MDP size: 1238, iterations: 11649

optimal: 0.964891
--------------------

None

hole scores:  {1: 0.00019164540117354398, 2: 0.00021144851937679928, 6: 2.0333592853309776e-05, 14: 3.950090835188376e-05, 15: 0.00011051576995471661, 28: 0.00028766407501448413, 32: 0.0002547014890509811, 34: 8.062798809839653e-05, 37: 0.00015052053959646177, 55: 0.00019667578434673678, 59: 1.6231651802949353e-05, 62: 0.00030993121985095254, 63: 0.00013658037324088478, 66: 2.0899190607770803e-05, 74: 0.0002871257272186587, 92: 0.0001596615923073606, 111: 0.00022672568954381416, 148: 1.4438645407413174e-05}
selected hole:  62
hole has options:  [0, 1, 2, 3]
2022-06-05 14:53:00,705 - synthesizer_pomdp.py - FSC synthesis: elapsed 403.8 s, opt = 0.965, injections: 3.
2022-06-05 14:53:00,705 - synthesizer_pomdp.py - Injecting memory into observation 129 ...
2022-06-05 14:53:00,705 - quotient_pomdp.py - Unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2022-06-05 14:53:00,706 - quotient_pomdp.py - Constructed quotient MDP having 1254 states and 3130 actions.

------------------------------------------------------------

2022-06-05 14:53:00,845 - quotient_pomdp.py - Symmetry breaking: reduced design space from 7148285332980175539152431756830464279108114589374305609354861137496193758101783702886743362519175929832585222042531366338374595191754677086179712505232582331902952606565625180199474933497155804550760816180799904988266496 to 670151749966891456795540477202856026166385742753841150877018231640268164822042222145632190236172743421804864566487315594222618299227000976829348047365554593615901806865527360643700775015358356676633826516949991092649984
2022-06-05 14:53:00,853 - synthesizer.py - Synthesis initiated.
> Progress 0.0%, elapsed 3.0 s, iters = (593, 0), opt = 0.965
> Progress 0.0%, elapsed 6.0 s, iters = (1212, 0), opt = 0.965
> Progress 0.0%, elapsed 9.0 s, iters = (1790, 0), opt = 0.965
> Progress 0.0%, elapsed 12.0 s, iters = (2386, 0), opt = 0.965
> Progress 0.0%, elapsed 15.0 s, iters = (2964, 0), opt = 0.965
> Progress 0.0%, elapsed 18.0 s, iters = (3541, 0), opt = 0.965
> Progress 0.0%, elapsed 21.0 s, iters = (4135, 0), opt = 0.965
> Progress 0.0%, elapsed 24.0 s, iters = (4735, 0), opt = 0.965
> Progress 0.0%, elapsed 27.0 s, iters = (5311, 0), opt = 0.965
> Progress 0.0%, elapsed 30.0 s, iters = (5903, 0), opt = 0.965
> Progress 0.0%, elapsed 33.0 s, iters = (6506, 0), opt = 0.965
> Progress 0.0%, elapsed 36.0 s, iters = (7056, 0), opt = 0.965
> Progress 0.0%, elapsed 39.0 s, iters = (7659, 0), opt = 0.965
> Progress 0.0%, elapsed 42.0 s, iters = (8259, 0), opt = 0.965
> Progress 0.0%, elapsed 45.0 s, iters = (8853, 0), opt = 0.965
> Progress 0.0%, elapsed 48.0 s, iters = (9452, 0), opt = 0.965
> Progress 0.0%, elapsed 51.0 s, iters = (10034, 0), opt = 0.965
> Progress 0.0%, elapsed 54.0 s, iters = (10623, 0), opt = 0.965
> Progress 0.0%, elapsed 57.0 s, iters = (11231, 0), opt = 0.965
> Progress 0.0%, elapsed 60.0 s, iters = (11822, 0), opt = 0.965
> Progress 0.0%, elapsed 63.0 s, iters = (12415, 0), opt = 0.965
> Progress 0.0%, elapsed 66.0 s, iters = (13001, 0), opt = 0.965
> Progress 0.0%, elapsed 69.0 s, iters = (13593, 0), opt = 0.965
> Progress 0.0%, elapsed 72.0 s, iters = (14185, 0), opt = 0.965
> Progress 0.0%, elapsed 75.0 s, iters = (14779, 0), opt = 0.965
> Progress 0.0%, elapsed 78.0 s, iters = (15374, 0), opt = 0.965
> Progress 0.0%, elapsed 81.0 s, iters = (15935, 0), opt = 0.965
> Progress 0.0%, elapsed 84.0 s, iters = (16485, 0), opt = 0.965
> Progress 0.0%, elapsed 87.0 s, iters = (17048, 0), opt = 0.965
> Progress 0.0%, elapsed 90.0 s, iters = (17626, 0), opt = 0.965
> Progress 0.0%, elapsed 93.0 s, iters = (18202, 0), opt = 0.965
> Progress 0.0%, elapsed 96.0 s, iters = (18765, 0), opt = 0.965
> Progress 0.0%, elapsed 99.0 s, iters = (19335, 0), opt = 0.965
> Progress 0.0%, elapsed 102.0 s, iters = (19909, 0), opt = 0.965
> Progress 0.0%, elapsed 105.0 s, iters = (20487, 0), opt = 0.965
> Progress 0.0%, elapsed 108.0 s, iters = (21070, 0), opt = 0.965
> Progress 0.0%, elapsed 111.0 s, iters = (21654, 0), opt = 0.965
> Progress 0.0%, elapsed 114.0 s, iters = (22233, 0), opt = 0.965
--------------------
Synthesis summary

optimality objective: Pmax=? ["notbad" U "goal"] 

method: AR, synthesis time: 114.95 s
number of holes: 373, family size: 7148285332980175539152431756830464279108114589374305609354861137496193758101783702886743362519175929832585222042531366338374595191754677086179712505232582331902952606565625180199474933497155804550760816180799904988266496, super quotient: 1254 states / 3130 actions
explored: 0 %
AR stats: avg MDP size: 1249, iterations: 22417

optimal: 0.964891
--------------------

None

hole scores:  {1: 0.00018839611280862091, 2: 0.0002150322248744256, 6: 2.0874864802121272e-05, 14: 4.391153600863137e-05, 15: 0.00011106106808057559, 25: 0.00012072232716517985, 30: 0.0002965423484946226, 34: 0.00025803841901137826, 36: 8.022916241727003e-05, 39: 0.00014527184881941036, 57: 0.00020020650785470892, 61: 1.7508956591623922e-05, 64: 9.87591622063465e-06, 65: 7.84465087138191e-05, 66: 0.0001343880864130391, 69: 1.992343366498238e-05, 77: 0.0002927751846944197, 96: 0.00015587904334132894, 115: 0.00019873570374203845, 152: 1.286944220585809e-05}
selected hole:  30
hole has options:  [0, 2, 3]
2022-06-05 14:54:55,802 - synthesizer_pomdp.py - FSC synthesis: elapsed 518.9 s, opt = 0.965, injections: 4.
2022-06-05 14:54:55,802 - synthesizer_pomdp.py - Injecting memory into observation 65 ...
2022-06-05 14:54:55,802 - quotient_pomdp.py - Unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2022-06-05 14:54:55,802 - quotient_pomdp.py - Constructed quotient MDP having 1264 states and 3173 actions.

------------------------------------------------------------

2022-06-05 14:54:55,971 - quotient_pomdp.py - Symmetry breaking: reduced design space from 228745130655365617252877816218574856931459666859977779499355556399878200259257078492375787600613629754642727105361003722827987046136149666757750800167442634620894483410100005766383197871908985745624346117785596959624527872 to 8041820999602697481546485726434272313996628913046093810524218779683217977864506665747586282834072921061658374797847787130671419590724011721952176568386655123390821682386328327724409300184300280119605918203399893111799808
2022-06-05 14:54:55,978 - synthesizer.py - Synthesis initiated.
> Progress 0.0%, elapsed 3.0 s, iters = (586, 0), opt = 0.965
> Progress 0.0%, elapsed 6.0 s, iters = (1166, 0), opt = 0.965
> Progress 0.0%, elapsed 9.0 s, iters = (1729, 0), opt = 0.965
> Progress 0.0%, elapsed 12.0 s, iters = (2314, 0), opt = 0.965
> Progress 0.0%, elapsed 15.0 s, iters = (2887, 0), opt = 0.965
> Progress 0.0%, elapsed 18.0 s, iters = (3476, 0), opt = 0.965
> Progress 0.0%, elapsed 21.0 s, iters = (4062, 0), opt = 0.965
> Progress 0.0%, elapsed 24.0 s, iters = (4653, 0), opt = 0.965
> Progress 0.0%, elapsed 27.0 s, iters = (5220, 0), opt = 0.965
> Progress 0.0%, elapsed 30.0 s, iters = (5813, 0), opt = 0.965
> Progress 0.0%, elapsed 33.0 s, iters = (6404, 0), opt = 0.965
> Progress 0.0%, elapsed 36.0 s, iters = (6995, 0), opt = 0.965
> Progress 0.0%, elapsed 39.0 s, iters = (7594, 0), opt = 0.965
> Progress 0.0%, elapsed 42.0 s, iters = (8161, 0), opt = 0.965
> Progress 0.0%, elapsed 45.0 s, iters = (8701, 0), opt = 0.965
> Progress 0.0%, elapsed 48.0 s, iters = (9242, 0), opt = 0.965
> Progress 0.0%, elapsed 51.0 s, iters = (9768, 0), opt = 0.965
> Progress 0.0%, elapsed 54.0 s, iters = (10298, 0), opt = 0.965
> Progress 0.0%, elapsed 57.0 s, iters = (10826, 0), opt = 0.965
> Progress 0.0%, elapsed 60.0 s, iters = (11342, 0), opt = 0.965
> Progress 0.0%, elapsed 63.0 s, iters = (11875, 0), opt = 0.965
> Progress 0.0%, elapsed 66.0 s, iters = (12398, 0), opt = 0.965
> Progress 0.0%, elapsed 69.0 s, iters = (12970, 0), opt = 0.965
> Progress 0.0%, elapsed 72.0 s, iters = (13545, 0), opt = 0.965
> Progress 0.0%, elapsed 75.0 s, iters = (14124, 0), opt = 0.965
> Progress 0.0%, elapsed 78.0 s, iters = (14714, 0), opt = 0.965
> Progress 0.0%, elapsed 81.0 s, iters = (15277, 0), opt = 0.965
> Progress 0.0%, elapsed 84.0 s, iters = (15867, 0), opt = 0.965
> Progress 0.0%, elapsed 87.0 s, iters = (16476, 0), opt = 0.965
> Progress 0.0%, elapsed 90.0 s, iters = (17050, 0), opt = 0.965
> Progress 0.0%, elapsed 93.0 s, iters = (17627, 0), opt = 0.965
> Progress 0.0%, elapsed 96.0 s, iters = (18207, 0), opt = 0.965
> Progress 0.0%, elapsed 99.0 s, iters = (18789, 0), opt = 0.965
> Progress 0.0%, elapsed 102.0 s, iters = (19380, 0), opt = 0.965
> Progress 0.0%, elapsed 105.0 s, iters = (19981, 0), opt = 0.965
> Progress 0.0%, elapsed 108.0 s, iters = (20580, 0), opt = 0.965
> Progress 0.0%, elapsed 111.0 s, iters = (21168, 0), opt = 0.965
> Progress 0.0%, elapsed 114.0 s, iters = (21761, 0), opt = 0.965
> Progress 0.0%, elapsed 117.0 s, iters = (22351, 0), opt = 0.965
> Progress 0.0%, elapsed 120.0 s, iters = (22945, 0), opt = 0.965
2022-06-05 14:56:58,928 - property.py - New opt = 0.9650923932492812.
> Progress 0.0%, elapsed 123.0 s, iters = (23525, 0), opt = 0.965
2022-06-05 14:56:59,372 - property.py - New opt = 0.9653128645262281.
> Progress 0.0%, elapsed 126.0 s, iters = (24122, 0), opt = 0.965
> Progress 0.0%, elapsed 129.0 s, iters = (24709, 0), opt = 0.965
> Progress 0.0%, elapsed 132.0 s, iters = (25300, 0), opt = 0.965
> Progress 0.0%, elapsed 135.0 s, iters = (25897, 0), opt = 0.965
> Progress 0.0%, elapsed 138.0 s, iters = (26495, 0), opt = 0.965
> Progress 0.0%, elapsed 141.0 s, iters = (27105, 0), opt = 0.965
> Progress 0.0%, elapsed 144.0 s, iters = (27682, 0), opt = 0.965
> Progress 0.0%, elapsed 147.0 s, iters = (28226, 0), opt = 0.965
> Progress 0.0%, elapsed 150.0 s, iters = (28789, 0), opt = 0.965
> Progress 0.0%, elapsed 153.0 s, iters = (29363, 0), opt = 0.965
> Progress 0.0%, elapsed 156.0 s, iters = (29926, 0), opt = 0.965
> Progress 0.0%, elapsed 159.0 s, iters = (30469, 0), opt = 0.965
> Progress 0.0%, elapsed 162.0 s, iters = (31050, 0), opt = 0.965
> Progress 0.0%, elapsed 165.0 s, iters = (31614, 0), opt = 0.965
> Progress 0.0%, elapsed 168.0 s, iters = (32198, 0), opt = 0.965
> Progress 0.0%, elapsed 171.0 s, iters = (32743, 0), opt = 0.965
> Progress 0.0%, elapsed 174.0 s, iters = (33301, 0), opt = 0.965
> Progress 0.0%, elapsed 177.0 s, iters = (33869, 0), opt = 0.965
> Progress 0.0%, elapsed 180.0 s, iters = (34459, 0), opt = 0.965
> Progress 0.0%, elapsed 183.0 s, iters = (35036, 0), opt = 0.965
> Progress 0.0%, elapsed 186.0 s, iters = (35646, 0), opt = 0.965
> Progress 0.0%, elapsed 189.0 s, iters = (36233, 0), opt = 0.965
> Progress 0.0%, elapsed 192.0 s, iters = (36795, 0), opt = 0.965
> Progress 0.0%, elapsed 195.0 s, iters = (37384, 0), opt = 0.965
> Progress 0.0%, elapsed 198.0 s, iters = (37958, 0), opt = 0.965
> Progress 0.0%, elapsed 201.0 s, iters = (38550, 0), opt = 0.965
> Progress 0.0%, elapsed 204.0 s, iters = (39135, 0), opt = 0.965
> Progress 0.0%, elapsed 207.0 s, iters = (39706, 0), opt = 0.965
> Progress 0.0%, elapsed 210.0 s, iters = (40281, 0), opt = 0.965
> Progress 0.0%, elapsed 213.0 s, iters = (40884, 0), opt = 0.965
> Progress 0.0%, elapsed 216.0 s, iters = (41469, 0), opt = 0.965
> Progress 0.0%, elapsed 219.0 s, iters = (42048, 0), opt = 0.965
> Progress 0.0%, elapsed 222.0 s, iters = (42640, 0), opt = 0.965
> Progress 0.0%, elapsed 225.0 s, iters = (43236, 0), opt = 0.965
> Progress 0.0%, elapsed 228.0 s, iters = (43821, 0), opt = 0.965
> Progress 0.0%, elapsed 231.0 s, iters = (44414, 0), opt = 0.965
> Progress 0.0%, elapsed 234.0 s, iters = (44999, 0), opt = 0.965
> Progress 0.0%, elapsed 237.0 s, iters = (45596, 0), opt = 0.965
> Progress 0.0%, elapsed 240.0 s, iters = (46168, 0), opt = 0.965
> Progress 0.0%, elapsed 243.0 s, iters = (46763, 0), opt = 0.965
> Progress 0.0%, elapsed 246.0 s, iters = (47362, 0), opt = 0.965
> Progress 0.0%, elapsed 249.0 s, iters = (47955, 0), opt = 0.965
> Progress 0.0%, elapsed 252.0 s, iters = (48555, 0), opt = 0.965
> Progress 0.0%, elapsed 255.0 s, iters = (49137, 0), opt = 0.965
> Progress 0.0%, elapsed 258.0 s, iters = (49718, 0), opt = 0.965
> Progress 0.0%, elapsed 261.0 s, iters = (50311, 0), opt = 0.965
> Progress 0.0%, elapsed 264.0 s, iters = (50894, 0), opt = 0.965
> Progress 0.0%, elapsed 267.0 s, iters = (51481, 0), opt = 0.965
> Progress 0.0%, elapsed 270.0 s, iters = (52073, 0), opt = 0.965
> Progress 0.0%, elapsed 273.0 s, iters = (52629, 0), opt = 0.965
> Progress 0.0%, elapsed 276.0 s, iters = (53210, 0), opt = 0.965
> Progress 0.0%, elapsed 279.0 s, iters = (53808, 0), opt = 0.965
> Progress 0.0%, elapsed 282.0 s, iters = (54375, 0), opt = 0.965
> Progress 0.0%, elapsed 285.0 s, iters = (54955, 0), opt = 0.965
> Progress 0.0%, elapsed 288.0 s, iters = (55527, 0), opt = 0.965
> Progress 0.0%, elapsed 291.0 s, iters = (56094, 0), opt = 0.965
> Progress 0.0%, elapsed 294.0 s, iters = (56690, 0), opt = 0.965
> Progress 0.0%, elapsed 297.0 s, iters = (57261, 0), opt = 0.965
> Progress 0.0%, elapsed 300.0 s, iters = (57847, 0), opt = 0.965
> Progress 0.0%, elapsed 303.0 s, iters = (58427, 0), opt = 0.965
> Progress 0.0%, elapsed 306.0 s, iters = (59014, 0), opt = 0.965
> Progress 0.0%, elapsed 309.0 s, iters = (59608, 0), opt = 0.965
> Progress 0.0%, elapsed 312.0 s, iters = (60185, 0), opt = 0.965
> Progress 0.0%, elapsed 315.0 s, iters = (60769, 0), opt = 0.965
> Progress 0.0%, elapsed 318.0 s, iters = (61323, 0), opt = 0.965
> Progress 0.0%, elapsed 321.0 s, iters = (61897, 0), opt = 0.965
> Progress 0.0%, elapsed 324.0 s, iters = (62481, 0), opt = 0.965
> Progress 0.0%, elapsed 327.0 s, iters = (63072, 0), opt = 0.965
> Progress 0.0%, elapsed 330.0 s, iters = (63680, 0), opt = 0.965
> Progress 0.0%, elapsed 333.0 s, iters = (64265, 0), opt = 0.965
> Progress 0.0%, elapsed 336.0 s, iters = (64862, 0), opt = 0.965
> Progress 0.0%, elapsed 339.0 s, iters = (65439, 0), opt = 0.965
> Progress 0.0%, elapsed 342.0 s, iters = (66020, 0), opt = 0.965
> Progress 0.0%, elapsed 345.0 s, iters = (66615, 0), opt = 0.965
> Progress 0.0%, elapsed 348.0 s, iters = (67201, 0), opt = 0.965
> Progress 0.0%, elapsed 351.0 s, iters = (67783, 0), opt = 0.965
--------------------
Synthesis summary

optimality objective: Pmax=? ["notbad" U "goal"] 

method: AR, synthesis time: 353.45 s
number of holes: 377, family size: 228745130655365617252877816218574856931459666859977779499355556399878200259257078492375787600613629754642727105361003722827987046136149666757750800167442634620894483410100005766383197871908985745624346117785596959624527872, super quotient: 1264 states / 3173 actions
explored: 0 %
AR stats: avg MDP size: 1255, iterations: 68268

optimal: 0.965313
--------------------

A([start & turn & dx=2 & dy=4 & seedx=4 & seedy=4],0)={'north'}, A([start & turn & dx=1 & dy=4 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=4 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedx=2 & seedy=3],0)={'west'}, A([start & turn & dy=1 & seedx=1 & seedy=3],0)={'north'}, A([start & turn & dx=1 & dy=3 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & seedx=1 & seedy=1],0)={'north'}, A([start & turn & dx=2 & seedx=1 & seedy=1],0)={'east'}, M([start & !turn & dx=2 & seedx=-1 & seedy=-1],0)=0, A([start & turn & dx=4 & dy=3 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=4 & seedy=2],0)={'south'}, A([start & turn & dy=1 & seedx=2 & seedy=2],0)={'west'}, A([start & turn & dx=2 & dy=2 & seedx=3],0)={'south'}, A([start & turn & dx=1 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=1 & seedx=-1 & seedy=-1],1)={'east'}, A([start & turn & dx=3 & dy=4 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=3 & dy=1 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=2 & seedx=2 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=4 & seedy=3],0)={'east'}, A([start & turn & dx=4 & dy=2 & seedx=3 & seedy=1],0)={'south'}, M([start & !turn & dy=1 & seedx=1 & seedy=3],0)=0, A([start & turn & dx=1 & dy=2 & seedx=3 & seedy=3],0)={'north'}, A([start & turn & dx=2 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=4 & seedy=4],0)={'north'}, M([start & !turn & dy=1 & seedx=-1 & seedy=-1],0)=1, A([start & turn & dx=4 & dy=2 & seedx=2 & seedy=3],0)={'south'}, A([start & turn & dx=4 & dy=3 & seedx=2 & seedy=3],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=4 & seedy=4],0)={'north'}, A([start & turn & dy=2 & seedx=1 & seedy=4],0)={'west'}, A([start & turn & dx=2 & seedx=-1 & seedy=-1],0)={'north'}, A([start & turn & dx=2 & seedx=-1 & seedy=-1],1)={'east'}, A([start & turn & dx=4 & dy=2 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedy=2],0)={'east'}, A([start & turn & dy=3 & seedx=2 & seedy=1],0)={'east'}, A([start & turn & dx=4 & dy=1 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=3 & dy=2 & seedx=1 & seedy=3],0)={'east'}, M([start & !turn & dx=1 & seedx=-1 & seedy=-1],0)=1, A([start & turn & dx=2 & dy=3 & seedx=4 & seedy=2],0)={'south'}, A([start & turn & dx=3 & dy=4 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dy=3 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedx=3 & seedy=1],0)={'west'}, A([start & turn & dx=2 & seedy=1],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedy=4],0)={'east'}, A([start & turn & dy=4 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedy=1],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dy=3 & seedy=1],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=4 & seedy=4],0)={'west'}, A([start & turn & dx=3 & dy=4 & seedx=4 & seedy=3],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dx=2 & seedx=3 & seedy=1],0)={'west'}, A([start & turn & dx=2 & dy=1 & seedx=4],0)={'south'}, A([start & turn & seedx=2],0)={'south'}, A([start & turn & dx=1 & dy=3 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & dx=3 & dy=4 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedx=1 & seedy=2],0)={'east'}, M([start & !turn & dx=2 & seedy=2],0)=1, A([start & turn & dx=1 & dy=3 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=3 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=2 & dy=4 & seedx=4 & seedy=2],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedy=2],0)={'north'}, A([start & turn & dx=3 & dy=4 & seedx=4 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=2 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dy=4 & seedy=2],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedy=4],0)={'east'}, A([start & turn & dy=1 & seedx=-1 & seedy=-1],0)={'north'}, A([start & turn & dy=1 & seedx=-1 & seedy=-1],1)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=3 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=3 & seedx=4 & seedy=1],0)={'west'}, A([start & turn & dx=3 & dy=1 & seedx=-1 & seedy=-1],0)={'west'}, A([start & turn & dx=3 & dy=1 & seedx=4 & seedy=1],0)={'west'}, A([start & turn & dx=3 & dy=3 & seedx=2 & seedy=3],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=2 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=4 & seedx=2],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=3 & dy=1 & seedx=2],0)={'south'}, A([start & turn & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=2 & seedy=3],0)={'north'}, A([start & turn & dx=3 & dy=1 & seedx=2 & seedy=1],0)={'east'}, A([start & turn & dx=4 & dy=3 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & dx=2 & seedx=4 & seedy=2],0)={'south'}, A([start & turn & dx=2 & seedx=4 & seedy=2],1)={'north'}, A([start & turn & dx=2 & seedx=4 & seedy=2],2)={'north'}, A([start & turn & dx=1 & dy=3 & seedx=3 & seedy=4],0)={'north'}, M([start & !turn & dy=1 & seedy=3],0)=0, A([start & turn & dx=1 & dy=1],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=1],0)={'south'}, A([start & turn & dx=2 & dy=2 & seedx=1],0)={'south'}, A([start & turn & dx=3 & dy=2 & seedx=2],0)={'south'}, A([start & turn & dx=3 & dy=2 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dy=2 & seedx=2],0)={'south'}, A([start & turn & dy=4 & seedx=2 & seedy=3],0)={'south'}, A([start & turn & dx=2 & dy=2 & seedy=4],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dy=4 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dy=1 & seedx=2],0)={'south'}, A([start & turn & dy=2 & seedx=1 & seedy=3],0)={'north'}, A([start & turn & dx=4 & dy=1 & seedx=2 & seedy=3],0)={'south'}, A([start & turn & dx=1 & seedx=2 & seedy=2],0)={'north'}, A([start & turn & dx=2 & dy=3 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=2 & dy=2 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=2 & dy=1 & seedx=3],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=3 & seedy=4],0)={'east'}, A([start & turn & dx=2 & dy=4 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=3 & dy=1 & seedx=4],0)={'south'}, A([start & turn & dx=2 & dy=2 & seedx=4],0)={'south'}, A([start & turn & dy=3 & seedx=1 & seedy=4],0)={'north'}, M([start & !turn & dx=1 & seedy=2],0)=1, A([start & turn & dx=1 & seedx=3],0)={'south'}, A([start & turn & dy=2 & seedx=2 & seedy=4],0)={'east'}, A([start & turn & dx=3 & dy=3 & seedx=1 & seedy=4],0)={'east'}, A([start & turn & dx=4 & dy=3 & seedx=2 & seedy=4],0)={'south'}, A([start & turn & dy=2 & seedx=-1 & seedy=-1],0)={'south'}, A([start & turn & dx=4 & dy=1 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=1 & seedx=2 & seedy=1],0)={'west'}, A([start & turn & dx=1 & dy=2],0)={'south'}, A([start & turn & dx=3 & dy=4 & seedx=3 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=1 & seedx=1 & seedy=2],0)={'north'}, A([start & turn & dx=2 & dy=3 & seedx=4 & seedy=4],0)={'north'}, A([start & turn & dx=2 & dy=3 & seedx=1 & seedy=4],0)={'east'}, A([start & turn & dx=4 & seedx=3 & seedy=2],0)={'north'}, A([start & turn & dx=1 & dy=2 & seedx=1 & seedy=3],0)={'north'}, A([start & turn & dx=4 & dy=2 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=3 & dy=1 & seedx=3 & seedy=3],0)={'west'}, A([start & turn & dy=1 & seedx=1 & seedy=2],0)={'north'}, A([start & turn & dx=2 & dy=1 & seedx=3 & seedy=3],0)={'north'}, A([start & turn & dx=4 & dy=2 & seedx=2],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=4 & dy=2 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=3 & seedy=3],0)={'north'}, A([start & turn & dx=2 & dy=2 & seedx=4 & seedy=2],0)={'south'}, A([start & turn & dy=4 & seedx=1 & seedy=3],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedx=2 & seedy=3],0)={'north'}, A([start & turn & dx=1 & seedy=1],0)={'east'}, A([start & turn & dx=4 & dy=1 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=1 & dy=4 & seedx=2 & seedy=4],0)={'west'}, A([start & turn & dx=4 & dy=3 & seedx=4 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedx=3 & seedy=4],0)={'west'}, A([start & turn & dx=3 & seedx=2 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=4 & seedx=3 & seedy=3],0)={'west'}, A([start & turn & dx=3 & dy=3 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=3 & dy=2 & seedx=1 & seedy=1],0)={'east'}, A([start & turn & dx=3 & dy=1 & seedx=4 & seedy=3],0)={'west'}, A([start & turn & dx=2 & dy=2 & seedx=4 & seedy=3],0)={'north'}, A([start & turn & dx=2 & dy=2 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedx=3 & seedy=3],0)={'north'}, M([start & !turn & dx=2 & seedx=3 & seedy=2],0)=0, A([start & turn & dx=2 & dy=1 & seedx=-1 & seedy=-1],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=3 & seedy=3],0)={'north'}, A([start & turn & dx=3 & dy=2 & seedx=2 & seedy=4],0)={'east'}, A([start & turn & seedy=1],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=4 & seedy=2],0)={'west'}, A([start & turn & dx=4 & dy=1 & seedx=4 & seedy=2],0)={'west'}, A([start & turn & dx=2 & dy=4 & seedx=3 & seedy=2],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=1 & dy=3 & seedx=1 & seedy=2],0)={'south'}, A([start & turn & dy=3 & seedx=1 & seedy=2],0)={'south'}, A([start & turn & dx=2 & seedx=3],0)={'west'}, A([start & turn & dy=3 & seedx=2 & seedy=2],0)={'west'}, A([start & turn & dx=2 & dy=4 & seedy=2],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedy=4],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedx=3 & seedy=4],0)={'north'}, A([start & turn & dx=3 & seedx=3 & seedy=1],0)={'west'}, A([start & turn & dx=4 & dy=2 & seedx=4],0)={'south'}, A([start & turn & dx=3 & dy=4 & seedx=2 & seedy=3],0)={'east'}, A([start & turn & dy=4 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=3 & seedx=3 & seedy=2],0)={'west'}, A([start & turn & dx=1 & dy=2 & seedy=4],0)={'east'}, A([start & turn & dx=3 & dy=4 & seedx=1 & seedy=4],0)={'east'}, A([start & turn & dx=2 & seedx=4 & seedy=1],0)={'north'}, A([start & turn & dy=4 & seedx=1 & seedy=4],0)={'north'}, A([start & turn & dx=3 & dy=1 & seedx=1],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=3],0)={'south'}, A([start & turn & dx=1 & dy=4 & seedy=3],0)={'east'}, A([start & turn & dx=1 & dy=2 & seedy=3],0)={'east'}, M([start & !turn & dy=1 & seedx=2 & seedy=2],0)=1, A([start & turn & dx=3 & dy=1 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedx=2 & seedy=3],0)={'east'}, M([start & !turn & dx=1 & seedx=3 & seedy=2],0)=0, A([start & turn & dy=2 & seedx=1 & seedy=2],0)={'south'}, A([start & turn & dx=3 & seedx=1 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=2 & seedx=1],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=4 & seedy=3],0)={'west'}, A([start & turn & dx=1 & dy=1 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=4 & dy=1 & seedx=4 & seedy=3],0)={'west'}, A([start & turn & dy=1 & seedy=2],0)={'north'}, M([start & !turn & dx=1 & seedx=1 & seedy=2],0)=1, A([start & turn & dx=1 & dy=4 & seedx=1 & seedy=2],0)={'east'}, M([start & !turn & dx=1 & seedx=3],0)=0, A([start & turn & dx=1 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=2 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dy=1 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=4 & dy=3 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=3 & seedy=2],0)={'west'}, A([start & turn & dx=2 & dy=1 & seedx=3 & seedy=2],0)={'west'}, A([start & turn & dx=4 & dy=1 & seedx=3 & seedy=2],0)={'north'}, A([start & turn & dx=2 & dy=4 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=3 & seedx=2],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedx=4 & seedy=3],0)={'north'}, A([start & turn & dx=2 & dy=2 & seedx=2],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=3 & dy=1 & seedx=3],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedx=1 & seedy=4],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedx=4 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=2 & seedx=4 & seedy=1],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=4 & seedy=3],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=2 & seedy=1],0)={'west'}, A([start & turn & dy=4 & seedx=2 & seedy=4],0)={'north'}, A([start & turn & dx=2 & seedx=3 & seedy=2],0)={'west'}, A([start & turn & dx=1 & dy=3 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=2 & seedx=2],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=1 & dy=3 & seedx=1 & seedy=4],0)={'north'}, M([start & !turn & dx=1 & seedx=2 & seedy=2],0)=1, A([start & turn & dx=1 & dy=4 & seedx=3 & seedy=3],0)={'south'}, A([start & turn & dy=1 & seedy=3],0)={'east'}, A([start & turn & dx=3 & dy=4 & seedx=4 & seedy=4],0)={'east'}, A([start & turn & dx=1 & seedx=3 & seedy=1],0)={'north'}, A([start & turn & dx=3 & dy=1 & seedx=4 & seedy=2],0)={'west'}, A([start & turn & dy=2 & seedy=4],0)={'east'}, A([start & turn & dx=4 & seedx=2 & seedy=1],0)={'south'}, M([start & !turn & dx=2 & seedx=1 & seedy=2],0)=1, A([start & turn & dx=4 & dy=1 & seedx=2],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedx=2 & seedy=2],0)={'west'}, A([start & turn & dx=3 & dy=2 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=3 & dy=1 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=4 & dy=3 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=4 & dy=1 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dy=3 & seedx=1 & seedy=1],0)={'west'}, A([start & turn & dx=1 & dy=2 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dy=3 & seedy=4],0)={'north'}, A([start & turn & dx=3 & dy=1 & seedx=2 & seedy=3],0)={'east'}, A([start & turn & dx=4 & dy=3 & seedx=3 & seedy=4],0)={'south'}, A([start & turn & dy=3 & seedy=2],0)={'east'}, A([start & turn & dx=3 & dy=1 & seedx=3 & seedy=2],0)={'north'}, A([start & turn & dx=4 & dy=1 & seedx=3],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=4 & dy=2 & seedx=3 & seedy=4],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=4 & dy=2 & seedx=3],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedy=1],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dy=1 & seedx=1],0)={'south'}, A([start & turn & dx=2 & dy=1 & seedx=4 & seedy=1],0)={'south'}, A([start & turn & dy=4 & seedy=3],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedx=2 & seedy=3],0)={'west'}, A([start & turn & dx=2 & dy=2 & seedx=2 & seedy=4],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedy=2],0)={'east'}, A([start & turn & dy=2 & seedx=2 & seedy=3],0)={'north'}, A([start & turn & dx=3 & dy=2 & seedx=1 & seedy=4],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dy=2],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=4 & seedx=3 & seedy=1],0)={'north'}, A([start & turn & dx=4 & seedx=4 & seedy=2],0)={'west'}, A([start & turn & dx=3 & dy=4 & seedx=3 & seedy=2],0)={'east'}, A([start & turn & dx=2 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=1 & dy=2 & seedx=3 & seedy=4],0)={'east'}, A([start & turn & dx=1 & dy=1 & seedx=2],0)={'south'}, A([start & turn & dy=3 & seedx=1 & seedy=3],0)={'north'}, A([start & turn & dx=2 & dy=2 & seedx=3 & seedy=2],0)={'west'}, A([start & turn & dy=2 & seedx=1],0)={'south'}, A([start & turn & dx=4 & dy=3 & seedx=3 & seedy=3],0)={'south'}, A([start & turn & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedx=2 & seedy=3],0)={'east'}, A([start & turn & seedx=1],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedx=3],0)={'south'}, A([start & turn & dx=4 & dy=3 & seedx=4 & seedy=2],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedy=4],0)={'east'}, A([start & turn & dx=2],0)={'east'}, A([start & turn & dx=4 & seedx=3],0)={'south'}, A([start & turn & dx=4 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=1 & seedy=2],0)={'east'}, A([start & turn & dx=2 & seedy=2],0)={'east'}, A([start & turn & dx=4 & dy=2 & seedx=2 & seedy=4],0)={'south'}, A([start & turn & dy=2 & seedy=1],0)={'south'}, M([start & !turn & dy=1 & seedx=2 & seedy=3],0)=0, A([start & turn & dx=1 & dy=2 & seedx=1],0)={'south'}, A([start & turn & dy=3 & seedx=2 & seedy=3],0)={'north'}, A([start & turn & dx=3 & dy=2 & seedx=3],0)={'south'}, A([start & turn & dx=1 & dy=2 & seedx=2 & seedy=4],0)={'north'}, A([start & turn & dx=3 & dy=3 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dy=1 & seedx=2 & seedy=3],0)={'north'}, A([start & turn & dx=4 & dy=2 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=4 & dy=2 & seedx=3 & seedy=3],0)={'north'}, A([start & turn & dx=1 & dy=3 & seedy=3],0)={'east'}, A([start & turn & dx=1 & dy=1 & seedy=2],0)={'east'}, A([start & turn & dx=4 & dy=2 & seedx=4 & seedy=3],0)={'north'}, A([start & turn & dx=3 & dy=2 & seedx=4],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedx=3 & seedy=3],0)={'west'}, A([start & turn & dx=1 & dy=3 & seedx=2 & seedy=4],0)={'north'}, A([start & turn & dx=4 & seedx=4 & seedy=1],0)={'west'}, A([start & turn & dx=3 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=2 & dy=3 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & dx=2 & dy=1 & seedx=1 & seedy=1],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedx=3 & seedy=4],0)={'north'}, A([start & turn & dx=2 & dy=2],0)={'south'}, A([start & turn & dx=2 & dy=1 & seedx=2],0)={'south'}, A([start & turn & dx=3 & dy=3 & seedx=4 & seedy=1],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedx=1],0)={'south'}, A([start & turn & dx=1 & seedx=2],0)={'south'}, A([start & turn & dx=4 & dy=2 & seedx=4 & seedy=1],0)={'south'}, M([start & !turn & dx=1 & seedx=3 & seedy=1],0)=0, A([start & turn & dx=2 & dy=1 & seedx=2 & seedy=2],0)={'north'}, A([start & turn & dx=3 & dy=2 & seedx=3 & seedy=4],0)={'north'}, A([start & turn & dx=2 & dy=1 & seedy=3],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedx=2 & seedy=4],0)={'north'}, A([start & turn & dx=1 & dy=1 & seedx=2 & seedy=2],0)={'west'}, M([start & !turn & dx=2 & seedx=4 & seedy=1],0)=0, A([start & turn & dx=3 & seedx=4 & seedy=2],0)={'west'}, A([start & turn & dx=4 & dy=1 & seedx=3 & seedy=3],0)={'east'}, A([start & turn & dx=3 & dy=3 & seedx=2 & seedy=4],0)={'east'}, A([start & turn & dx=1 & dy=2 & seedx=1 & seedy=4],0)={'east'}, A([start & turn & dx=2 & dy=1 & seedx=4 & seedy=3],0)={'north'}, A([start & turn & dx=4 & dy=3 & seedx=4 & seedy=4],0)={'south'}, A([start & turn & dx=3 & seedx=1],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=3 & seedy=1],0)={'south'}, M([start & !turn & dx=2 & seedx=2 & seedy=2],0)=1, A([start & turn & seedx=1 & seedy=2],0)={'north'}, A([start & turn & dx=1 & dy=2 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=1 & seedx=1 & seedy=1],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedy=2],0)={'east'}, M([start & !turn & dy=1 & seedx=2 & seedy=1],0)=1, A([start & turn & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dy=2 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=3 & dy=2 & seedx=1],0)={'south'}, A([start & turn & dx=1],0)={'east'}, A([start & turn & dx=3 & dy=4 & seedx=2 & seedy=4],0)={'east'}, A([start & turn & dx=1 & dy=4 & seedx=3 & seedy=2],0)={'east'}, A([start & turn & dx=3 & dy=2 & seedx=4 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedx=2 & seedy=2],0)={'east'}, A([start & turn & dx=3 & dy=3 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=4 & seedx=4 & seedy=3],0)={'south'}, A([start & turn & dx=2 & dy=3 & seedy=3],0)={'east'}, A([start & turn & dx=2 & dy=2 & seedx=3 & seedy=4],0)={'north'}, A([start & turn & dy=2 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=2 & seedy=3],0)={'north'}, A([start & turn & dx=3 & seedx=4],0)={'west'}, M([start & !turn & dy=1 & seedx=2],0)=1, A([start & turn & dy=2 & seedy=3],0)={'north'}, A([start & turn & dx=4 & dy=1 & seedx=4],0)={'south'}, A([start & turn & dx=4 & dy=3 & seedx=3 & seedy=1],0)={'south'}, A([start & turn & dx=2 & dy=2 & seedx=1 & seedy=4],0)={'east'}, M([start & !turn & dx=2 & seedx=4 & seedy=2],0)=0, A([start & turn & dx=3 & dy=4 & seedx=1 & seedy=3],0)={'east'}, A([start & turn & dx=1 & dy=3 & seedx=2 & seedy=1],0)={'south'}, A([start & turn & dy=2 & seedx=2 & seedy=2],0)={'south'}, A([start & turn & dx=1 & dy=1 & seedx=1],0)={'south'}, A([start & turn & dx=3 & dy=2 & seedx=3 & seedy=3],0)={'north'}, A([start & turn & dx=2 & seedx=4],0)={'south'}, A([start & turn & dy=3 & seedx=2 & seedy=4],0)={'north'}, A([start & turn & dx=1 & seedx=1 & seedy=2],0)={'east'}, A([start & turn & dy=1 & seedx=1 & seedy=1],0)={'south'}, A([start & turn & dy=1],0)={'south'}, A([start & turn & dx=4 & dy=2 & seedx=4 & seedy=4],0)={'west'}, A([start & turn & dx=1 & dy=2 & seedx=3 & seedy=2],0)={'south'}, A([start & turn & dx=2 & dy=1 & seedx=4 & seedy=2],0)={'west'}, A([start & turn & dx=3 & dy=1 & seedx=1 & seedy=1],0)={'east'}

hole scores:  {0: 0.00012125164124456204, 1: 0.00010703311194314348, 2: 3.166835847422025e-05, 6: 3.3648840612448404e-05, 9: 0.000367575282772846, 15: 4.475059748016474e-05, 26: 8.160932610333594e-05, 29: 5.154120863348978e-05, 30: 0.00029149719018793207, 34: 4.888751966517405e-05, 35: 3.7221855191240226e-05, 40: 2.633727592803044e-05, 63: 2.9510973112939933e-05, 68: 4.51011363239525e-05, 79: 2.4545852681531007e-05, 83: 0.0021128525902995242, 114: 3.935691633000929e-05, 130: 4.287577115205123e-05, 137: 4.0334313726711524e-05, 152: 6.967998616619103e-05, 154: 3.2265013255130876e-05, 160: 4.751140320601918e-05, 161: 0.00010316129403038752, 179: 0.0006091504576102165, 201: 0.00045119870410602884, 212: 6.623227957022206e-05, 231: 0.000128903090215378, 234: 0.0005155483495486664, 245: 5.057040731634154e-05, 255: 0.00013448743553415155, 261: 7.606830357680312e-05, 275: 0.00018807635807542334, 319: 5.274817575693751e-05, 324: 3.476319953441299e-05, 329: 0.00011135136495707603, 332: 9.44467687284135e-05, 351: 0.0002629064490765085, 373: 5.213125031405459e-05, 374: 5.459217314616406e-05}
selected hole:  83
hole has options:  [3]
2022-06-05 15:00:49,439 - synthesizer_pomdp.py - FSC synthesis: elapsed 872.5 s, opt = 0.965, injections: 5.
2022-06-05 15:00:49,439 - synthesizer_pomdp.py - Injecting memory into observation 157 ...
2022-06-05 15:00:49,439 - quotient_pomdp.py - Unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2022-06-05 15:00:49,440 - quotient_pomdp.py - Constructed quotient MDP having 1265 states and 3190 actions.

------------------------------------------------------------

2022-06-05 15:00:49,587 - quotient_pomdp.py - Symmetry breaking: reduced design space from 2891790293717214716875887454417538932071786405736015385275803577203398482289867263903614895099115516898199414270242812495998255990659472330369590362610632812985135197678301307466375242232528412389127536106326559094512549888 to 101664502513495829890167918319366603080648740826656790888602469511056977893003145996611461155828279890952323157938223876812438687171622074114555911185530059831508659293377780340614754609737326998055264941238043093166456832
2022-06-05 15:00:49,594 - synthesizer.py - Synthesis initiated.
> Progress 0.0%, elapsed 3.0 s, iters = (580, 0), opt = 0.965
> Progress 0.0%, elapsed 6.0 s, iters = (1138, 0), opt = 0.965
> Progress 0.0%, elapsed 9.0 s, iters = (1702, 0), opt = 0.965
> Progress 0.0%, elapsed 12.0 s, iters = (2258, 0), opt = 0.965
> Progress 0.0%, elapsed 15.0 s, iters = (2819, 0), opt = 0.965
> Progress 0.0%, elapsed 18.0 s, iters = (3387, 0), opt = 0.965
> Progress 0.0%, elapsed 21.0 s, iters = (3955, 0), opt = 0.965
> Progress 0.0%, elapsed 24.0 s, iters = (4511, 0), opt = 0.965
> Progress 0.0%, elapsed 27.0 s, iters = (5085, 0), opt = 0.965
> Progress 0.0%, elapsed 30.0 s, iters = (5660, 0), opt = 0.965
> Progress 0.0%, elapsed 33.0 s, iters = (6235, 0), opt = 0.965
> Progress 0.0%, elapsed 36.0 s, iters = (6815, 0), opt = 0.965
> Progress 0.0%, elapsed 39.0 s, iters = (7356, 0), opt = 0.965
> Progress 0.0%, elapsed 42.0 s, iters = (7882, 0), opt = 0.965
> Progress 0.0%, elapsed 45.0 s, iters = (8408, 0), opt = 0.965
> Progress 0.0%, elapsed 48.0 s, iters = (8920, 0), opt = 0.965
> Progress 0.0%, elapsed 51.0 s, iters = (9450, 0), opt = 0.965
> Progress 0.0%, elapsed 54.0 s, iters = (9966, 0), opt = 0.965
> Progress 0.0%, elapsed 57.0 s, iters = (10463, 0), opt = 0.965
> Progress 0.0%, elapsed 60.0 s, iters = (10974, 0), opt = 0.965
> Progress 0.0%, elapsed 63.0 s, iters = (11537, 0), opt = 0.965
> Progress 0.0%, elapsed 66.0 s, iters = (12101, 0), opt = 0.965
> Progress 0.0%, elapsed 69.0 s, iters = (12669, 0), opt = 0.965
> Progress 0.0%, elapsed 72.0 s, iters = (13238, 0), opt = 0.965
> Progress 0.0%, elapsed 75.0 s, iters = (13826, 0), opt = 0.965
> Progress 0.0%, elapsed 78.0 s, iters = (14386, 0), opt = 0.965
> Progress 0.0%, elapsed 81.0 s, iters = (14941, 0), opt = 0.965
> Progress 0.0%, elapsed 84.0 s, iters = (15504, 0), opt = 0.965
> Progress 0.0%, elapsed 87.0 s, iters = (16082, 0), opt = 0.965
> Progress 0.0%, elapsed 90.0 s, iters = (16671, 0), opt = 0.965
> Progress 0.0%, elapsed 93.0 s, iters = (17255, 0), opt = 0.965
> Progress 0.0%, elapsed 96.0 s, iters = (17846, 0), opt = 0.965
> Progress 0.0%, elapsed 99.0 s, iters = (18412, 0), opt = 0.965
> Progress 0.0%, elapsed 102.0 s, iters = (18997, 0), opt = 0.965
> Progress 0.0%, elapsed 105.0 s, iters = (19591, 0), opt = 0.965
> Progress 0.0%, elapsed 108.0 s, iters = (20168, 0), opt = 0.965
> Progress 0.0%, elapsed 111.0 s, iters = (20757, 0), opt = 0.965
> Progress 0.0%, elapsed 114.0 s, iters = (21355, 0), opt = 0.965
> Progress 0.0%, elapsed 117.0 s, iters = (21945, 0), opt = 0.965
> Progress 0.0%, elapsed 120.0 s, iters = (22514, 0), opt = 0.965
> Progress 0.0%, elapsed 123.0 s, iters = (23074, 0), opt = 0.965
> Progress 0.0%, elapsed 126.0 s, iters = (23617, 0), opt = 0.965
> Progress 0.0%, elapsed 129.0 s, iters = (24167, 0), opt = 0.965
> Progress 0.0%, elapsed 132.0 s, iters = (24725, 0), opt = 0.965
> Progress 0.0%, elapsed 135.0 s, iters = (25277, 0), opt = 0.965
> Progress 0.0%, elapsed 138.0 s, iters = (25797, 0), opt = 0.965
> Progress 0.0%, elapsed 141.0 s, iters = (26371, 0), opt = 0.965
> Progress 0.0%, elapsed 144.0 s, iters = (26916, 0), opt = 0.965
> Progress 0.0%, elapsed 147.0 s, iters = (27485, 0), opt = 0.965
> Progress 0.0%, elapsed 150.0 s, iters = (28010, 0), opt = 0.965
> Progress 0.0%, elapsed 153.0 s, iters = (28550, 0), opt = 0.965
> Progress 0.0%, elapsed 156.0 s, iters = (29105, 0), opt = 0.965
> Progress 0.0%, elapsed 159.0 s, iters = (29684, 0), opt = 0.965
> Progress 0.0%, elapsed 162.0 s, iters = (30274, 0), opt = 0.965
> Progress 0.0%, elapsed 165.0 s, iters = (30864, 0), opt = 0.965
> Progress 0.0%, elapsed 168.0 s, iters = (31441, 0), opt = 0.965
> Progress 0.0%, elapsed 171.0 s, iters = (32015, 0), opt = 0.965
> Progress 0.0%, elapsed 174.0 s, iters = (32563, 0), opt = 0.965
> Progress 0.0%, elapsed 177.0 s, iters = (33133, 0), opt = 0.965
> Progress 0.0%, elapsed 180.0 s, iters = (33721, 0), opt = 0.965
> Progress 0.0%, elapsed 183.0 s, iters = (34290, 0), opt = 0.965
> Progress 0.0%, elapsed 186.0 s, iters = (34854, 0), opt = 0.965
> Progress 0.0%, elapsed 189.0 s, iters = (35426, 0), opt = 0.965
> Progress 0.0%, elapsed 192.0 s, iters = (36000, 0), opt = 0.965
> Progress 0.0%, elapsed 195.0 s, iters = (36591, 0), opt = 0.965
> Progress 0.0%, elapsed 198.0 s, iters = (37195, 0), opt = 0.965
> Progress 0.0%, elapsed 201.0 s, iters = (37816, 0), opt = 0.965
> Progress 0.0%, elapsed 204.0 s, iters = (38443, 0), opt = 0.965
> Progress 0.0%, elapsed 207.0 s, iters = (39065, 0), opt = 0.965
> Progress 0.0%, elapsed 210.0 s, iters = (39697, 0), opt = 0.965
> Progress 0.0%, elapsed 213.0 s, iters = (40328, 0), opt = 0.965
> Progress 0.0%, elapsed 216.0 s, iters = (40954, 0), opt = 0.965
> Progress 0.0%, elapsed 219.0 s, iters = (41567, 0), opt = 0.965
> Progress 0.0%, elapsed 222.0 s, iters = (42197, 0), opt = 0.965
> Progress 0.0%, elapsed 225.0 s, iters = (42810, 0), opt = 0.965
> Progress 0.0%, elapsed 228.0 s, iters = (43446, 0), opt = 0.965
> Progress 0.0%, elapsed 231.0 s, iters = (44070, 0), opt = 0.965
> Progress 0.0%, elapsed 234.0 s, iters = (44692, 0), opt = 0.965
> Progress 0.0%, elapsed 237.0 s, iters = (45286, 0), opt = 0.965
> Progress 0.0%, elapsed 240.0 s, iters = (45885, 0), opt = 0.965
> Progress 0.0%, elapsed 243.0 s, iters = (46479, 0), opt = 0.965
> Progress 0.0%, elapsed 246.0 s, iters = (47081, 0), opt = 0.965
> Progress 0.0%, elapsed 249.0 s, iters = (47679, 0), opt = 0.965
> Progress 0.0%, elapsed 252.0 s, iters = (48267, 0), opt = 0.965
> Progress 0.0%, elapsed 255.0 s, iters = (48866, 0), opt = 0.965
> Progress 0.0%, elapsed 258.0 s, iters = (49459, 0), opt = 0.965
> Progress 0.0%, elapsed 261.0 s, iters = (50048, 0), opt = 0.965
> Progress 0.0%, elapsed 264.0 s, iters = (50638, 0), opt = 0.965
> Progress 0.0%, elapsed 267.0 s, iters = (51233, 0), opt = 0.965
> Progress 0.0%, elapsed 270.0 s, iters = (51805, 0), opt = 0.965
> Progress 0.0%, elapsed 273.0 s, iters = (52386, 0), opt = 0.965
> Progress 0.0%, elapsed 276.0 s, iters = (52950, 0), opt = 0.965
> Progress 0.0%, elapsed 279.0 s, iters = (53527, 0), opt = 0.965
> Progress 0.0%, elapsed 282.0 s, iters = (54111, 0), opt = 0.965
> Progress 0.0%, elapsed 285.0 s, iters = (54688, 0), opt = 0.965
> Progress 0.0%, elapsed 288.0 s, iters = (55281, 0), opt = 0.965
> Progress 0.0%, elapsed 291.0 s, iters = (55861, 0), opt = 0.965
> Progress 0.0%, elapsed 294.0 s, iters = (56441, 0), opt = 0.965
> Progress 0.0%, elapsed 297.0 s, iters = (57022, 0), opt = 0.965
> Progress 0.0%, elapsed 300.0 s, iters = (57617, 0), opt = 0.965
> Progress 0.0%, elapsed 303.0 s, iters = (58232, 0), opt = 0.965
> Progress 0.0%, elapsed 306.0 s, iters = (58830, 0), opt = 0.965
> Progress 0.0%, elapsed 309.0 s, iters = (59419, 0), opt = 0.965
> Progress 0.0%, elapsed 312.0 s, iters = (60015, 0), opt = 0.965
> Progress 0.0%, elapsed 315.0 s, iters = (60600, 0), opt = 0.965
> Progress 0.0%, elapsed 318.0 s, iters = (61179, 0), opt = 0.965
> Progress 0.0%, elapsed 321.0 s, iters = (61773, 0), opt = 0.965
> Progress 0.0%, elapsed 324.0 s, iters = (62360, 0), opt = 0.965
> Progress 0.0%, elapsed 327.0 s, iters = (62947, 0), opt = 0.965
> Progress 0.0%, elapsed 330.0 s, iters = (63535, 0), opt = 0.965
--------------------
Synthesis summary

optimality objective: Pmax=? ["notbad" U "goal"] 

method: AR, synthesis time: 331.14 s
number of holes: 378, family size: 2891790293717214716875887454417538932071786405736015385275803577203398482289867263903614895099115516898199414270242812495998255990659472330369590362610632812985135197678301307466375242232528412389127536106326559094512549888, super quotient: 1265 states / 3190 actions
explored: 0 %
AR stats: avg MDP size: 1256, iterations: 63751

optimal: 0.965313
--------------------

None

hole scores:  {1: 0.00019682359508936773, 2: 0.0002064770231251983, 6: 1.7892007278161195e-05, 9: 8.568711914913509e-05, 14: 0.00011837048547188643, 15: 0.0001767425554353153, 25: 0.00012721303449154554, 30: 1.709622364229436e-05, 31: 0.00047467610022763364, 35: 0.0002497312338214076, 37: 0.00010198591706952219, 40: 0.00015437051193258023, 59: 0.0002197362213087209, 63: 1.3364629708400883e-05, 66: 1.0350345896846882e-05, 67: 8.213260053100843e-05, 68: 0.00011586931853591902, 71: 1.969952648303209e-05, 79: 0.00030152743340836714, 99: 0.00016497028668507565, 118: 0.00020902024174636853, 155: 1.4847769161453281e-05}
selected hole:  31
hole has options:  [1, 2]
2022-06-05 15:06:20,733 - synthesizer_pomdp.py - FSC synthesis: elapsed 1203.8 s, opt = 0.965, injections: 6.
2022-06-05 15:06:20,733 - synthesizer_pomdp.py - Injecting memory into observation 65 ...
2022-06-05 15:06:20,733 - quotient_pomdp.py - Unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2022-06-05 15:06:20,734 - quotient_pomdp.py - Constructed quotient MDP having 1275 states and 3233 actions.

------------------------------------------------------------

2022-06-05 15:06:20,877 - quotient_pomdp.py - Symmetry breaking: reduced design space from 39039168965182398677824480634636775582969116477436207701223348292245879510913208062698801083838059478125692092648277968695976455873902876459989469895243542975299325168657067650796065770139133567253221737435408547775919423488 to 114372565327682808626438908109287428465729833429988889749677778199939100129628539246187893800306814877321363552680501861413993523068074833378875400083721317310447241705050002883191598935954492872812173058892798479812263936
2022-06-05 15:06:20,884 - synthesizer.py - Synthesis initiated.
> Progress 0.0%, elapsed 3.0 s, iters = (578, 0), opt = 0.965
> Progress 0.0%, elapsed 6.0 s, iters = (1150, 0), opt = 0.965
> Progress 0.0%, elapsed 9.0 s, iters = (1716, 0), opt = 0.965
> Progress 0.0%, elapsed 12.0 s, iters = (2282, 0), opt = 0.965
> Progress 0.0%, elapsed 15.0 s, iters = (2869, 0), opt = 0.965
> Progress 0.0%, elapsed 18.0 s, iters = (3453, 0), opt = 0.965
> Progress 0.0%, elapsed 21.0 s, iters = (4053, 0), opt = 0.965
> Progress 0.0%, elapsed 24.0 s, iters = (4593, 0), opt = 0.965
> Progress 0.0%, elapsed 27.0 s, iters = (5122, 0), opt = 0.965
> Progress 0.0%, elapsed 30.0 s, iters = (5642, 0), opt = 0.965
> Progress 0.0%, elapsed 33.0 s, iters = (6199, 0), opt = 0.965
> Progress 0.0%, elapsed 36.0 s, iters = (6768, 0), opt = 0.965
> Progress 0.0%, elapsed 39.0 s, iters = (7334, 0), opt = 0.965
> Progress 0.0%, elapsed 42.0 s, iters = (7890, 0), opt = 0.965
> Progress 0.0%, elapsed 45.0 s, iters = (8442, 0), opt = 0.965
> Progress 0.0%, elapsed 48.0 s, iters = (9012, 0), opt = 0.965
> Progress 0.0%, elapsed 51.0 s, iters = (9600, 0), opt = 0.965
> Progress 0.0%, elapsed 54.0 s, iters = (10189, 0), opt = 0.965
> Progress 0.0%, elapsed 57.0 s, iters = (10772, 0), opt = 0.965
> Progress 0.0%, elapsed 60.0 s, iters = (11352, 0), opt = 0.965
> Progress 0.0%, elapsed 63.0 s, iters = (11941, 0), opt = 0.965
> Progress 0.0%, elapsed 66.0 s, iters = (12530, 0), opt = 0.965
> Progress 0.0%, elapsed 69.0 s, iters = (13118, 0), opt = 0.965
> Progress 0.0%, elapsed 72.0 s, iters = (13714, 0), opt = 0.965
> Progress 0.0%, elapsed 75.0 s, iters = (14299, 0), opt = 0.965
> Progress 0.0%, elapsed 78.0 s, iters = (14876, 0), opt = 0.965
> Progress 0.0%, elapsed 81.0 s, iters = (15449, 0), opt = 0.965
> Progress 0.0%, elapsed 84.0 s, iters = (16018, 0), opt = 0.965
> Progress 0.0%, elapsed 87.0 s, iters = (16563, 0), opt = 0.965
> Progress 0.0%, elapsed 90.0 s, iters = (17121, 0), opt = 0.965
--------------------
Synthesis summary

optimality objective: Pmax=? ["notbad" U "goal"] 

method: AR, synthesis time: 92.34 s
number of holes: 379, family size: 39039168965182398677824480634636775582969116477436207701223348292245879510913208062698801083838059478125692092648277968695976455873902876459989469895243542975299325168657067650796065770139133567253221737435408547775919423488, super quotient: 1275 states / 3233 actions
explored: 0 %
AR stats: avg MDP size: 1261, iterations: 17566

optimal: 0.965313
--------------------

None

hole scores:  {1: 0.00019772076657066995, 2: 0.00020524343535333953, 6: 1.7519036224932694e-05, 9: 0.00010619126617906585, 14: 0.00012108971822528714, 15: 0.00018994228519980116, 25: 0.00012785754793694594, 30: 1.7963601238107627e-05, 36: 0.0002482714776855691, 38: 0.00010372065049311157, 41: 0.00015525139247264227, 60: 0.00021548529741875912, 64: 1.2893244025564922e-05, 67: 1.031172194765309e-05, 68: 8.234181695435302e-05, 69: 0.00011231837458003602, 72: 1.9495515089242515e-05, 80: 0.0003035964633388036, 100: 0.00016592929263584263, 119: 0.00020968479532124657, 156: 1.3420810550468743e-05}
selected hole:  80
hole has options:  [0, 1, 2]
2022-06-05 15:07:53,228 - synthesizer_pomdp.py - FSC synthesis: elapsed 1296.3 s, opt = 0.965, injections: 7.
2022-06-05 15:07:53,228 - synthesizer_pomdp.py - Injecting memory into observation 149 ...
2022-06-05 15:07:53,228 - quotient_pomdp.py - Unfolding POMDP using the following memory allocation vector: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] ...
2022-06-05 15:07:53,228 - quotient_pomdp.py - Constructed quotient MDP having 1291 states and 3318 actions.

------------------------------------------------------------

2022-06-05 15:07:53,391 - quotient_pomdp.py - Symmetry breaking: reduced design space from 9994027255086694061523067042467014549240093818223669171513177162814945154793781264050893077462543226400177175717959159986169972703719136373757304293182347001676627243176209318603792837155618193216824764783464588230635372412928 to 10979766271457549628138135178491593132710064009278933415969066707194153612444339767634037804829454228222850901057328178695743378214535184004372038408037246461802935203684800276786393497851631315789968613653708654061977337856
2022-06-05 15:07:53,399 - synthesizer.py - Synthesis initiated.
> Progress 0.0%, elapsed 3.0 s, iters = (575, 0), opt = 0.965
> Progress 0.0%, elapsed 6.0 s, iters = (1158, 0), opt = 0.965
> Progress 0.0%, elapsed 9.0 s, iters = (1722, 0), opt = 0.965
> Progress 0.0%, elapsed 12.0 s, iters = (2297, 0), opt = 0.965
> Progress 0.0%, elapsed 15.0 s, iters = (2873, 0), opt = 0.965
> Progress 0.0%, elapsed 18.0 s, iters = (3431, 0), opt = 0.965
> Progress 0.0%, elapsed 21.0 s, iters = (4007, 0), opt = 0.965
> Progress 0.0%, elapsed 24.0 s, iters = (4597, 0), opt = 0.965
> Progress 0.0%, elapsed 27.0 s, iters = (5154, 0), opt = 0.965
> Progress 0.0%, elapsed 30.0 s, iters = (5718, 0), opt = 0.965
> Progress 0.0%, elapsed 33.0 s, iters = (6279, 0), opt = 0.965
> Progress 0.0%, elapsed 36.0 s, iters = (6821, 0), opt = 0.965
> Progress 0.0%, elapsed 39.0 s, iters = (7363, 0), opt = 0.965
> Progress 0.0%, elapsed 42.0 s, iters = (7920, 0), opt = 0.965
> Progress 0.0%, elapsed 45.0 s, iters = (8478, 0), opt = 0.965
> Progress 0.0%, elapsed 48.0 s, iters = (9030, 0), opt = 0.965
> Progress 0.0%, elapsed 51.0 s, iters = (9577, 0), opt = 0.965
> Progress 0.0%, elapsed 54.0 s, iters = (10109, 0), opt = 0.965
> Progress 0.0%, elapsed 57.0 s, iters = (10653, 0), opt = 0.965
> Progress 0.0%, elapsed 60.0 s, iters = (11211, 0), opt = 0.965
> Progress 0.0%, elapsed 63.0 s, iters = (11762, 0), opt = 0.965
> Progress 0.0%, elapsed 66.0 s, iters = (12310, 0), opt = 0.965
> Progress 0.0%, elapsed 69.0 s, iters = (12850, 0), opt = 0.965
> Progress 0.0%, elapsed 72.0 s, iters = (13383, 0), opt = 0.965
> Progress 0.0%, elapsed 75.0 s, iters = (13927, 0), opt = 0.965
> Progress 0.0%, elapsed 78.0 s, iters = (14464, 0), opt = 0.965
> Progress 0.0%, elapsed 81.0 s, iters = (15009, 0), opt = 0.965
> Progress 0.0%, elapsed 84.0 s, iters = (15573, 0), opt = 0.965
> Progress 0.0%, elapsed 87.0 s, iters = (16135, 0), opt = 0.965
> Progress 0.0%, elapsed 90.0 s, iters = (16710, 0), opt = 0.965
> Progress 0.0%, elapsed 93.0 s, iters = (17278, 0), opt = 0.965
> Progress 0.0%, elapsed 96.0 s, iters = (17855, 0), opt = 0.965
> Progress 0.0%, elapsed 99.0 s, iters = (18450, 0), opt = 0.965
> Progress 0.0%, elapsed 102.0 s, iters = (19020, 0), opt = 0.965
> Progress 0.0%, elapsed 105.0 s, iters = (19599, 0), opt = 0.965
> Progress 0.0%, elapsed 108.0 s, iters = (20166, 0), opt = 0.965
> Progress 0.0%, elapsed 111.0 s, iters = (20732, 0), opt = 0.965
> Progress 0.0%, elapsed 114.0 s, iters = (21304, 0), opt = 0.965
> Progress 0.0%, elapsed 117.0 s, iters = (21881, 0), opt = 0.965
> Progress 0.0%, elapsed 120.0 s, iters = (22454, 0), opt = 0.965
> Progress 0.0%, elapsed 123.0 s, iters = (23021, 0), opt = 0.965
> Progress 0.0%, elapsed 126.0 s, iters = (23604, 0), opt = 0.965
> Progress 0.0%, elapsed 129.0 s, iters = (24201, 0), opt = 0.965
> Progress 0.0%, elapsed 132.0 s, iters = (24774, 0), opt = 0.965
> Progress 0.0%, elapsed 135.0 s, iters = (25337, 0), opt = 0.965
> Progress 0.0%, elapsed 138.0 s, iters = (25883, 0), opt = 0.965
> Progress 0.0%, elapsed 141.0 s, iters = (26420, 0), opt = 0.965
> Progress 0.0%, elapsed 144.0 s, iters = (26972, 0), opt = 0.965
> Progress 0.0%, elapsed 147.0 s, iters = (27535, 0), opt = 0.965
> Progress 0.0%, elapsed 150.0 s, iters = (28088, 0), opt = 0.965
> Progress 0.0%, elapsed 153.0 s, iters = (28624, 0), opt = 0.965
> Progress 0.0%, elapsed 156.0 s, iters = (29170, 0), opt = 0.965
> Progress 0.0%, elapsed 159.0 s, iters = (29742, 0), opt = 0.965
> Progress 0.0%, elapsed 162.0 s, iters = (30292, 0), opt = 0.965
> Progress 0.0%, elapsed 165.0 s, iters = (30832, 0), opt = 0.965
> Progress 0.0%, elapsed 168.0 s, iters = (31400, 0), opt = 0.965
> Progress 0.0%, elapsed 171.0 s, iters = (31955, 0), opt = 0.965
> Progress 0.0%, elapsed 174.0 s, iters = (32490, 0), opt = 0.965
> Progress 0.0%, elapsed 177.0 s, iters = (33025, 0), opt = 0.965
> Progress 0.0%, elapsed 180.0 s, iters = (33575, 0), opt = 0.965
> Progress 0.0%, elapsed 183.0 s, iters = (34108, 0), opt = 0.965
> Progress 0.0%, elapsed 186.0 s, iters = (34658, 0), opt = 0.965
> Progress 0.0%, elapsed 189.0 s, iters = (35211, 0), opt = 0.965
> Progress 0.0%, elapsed 192.0 s, iters = (35757, 0), opt = 0.965
> Progress 0.0%, elapsed 195.0 s, iters = (36316, 0), opt = 0.965
> Progress 0.0%, elapsed 198.0 s, iters = (36886, 0), opt = 0.965
> Progress 0.0%, elapsed 201.0 s, iters = (37465, 0), opt = 0.965
> Progress 0.0%, elapsed 204.0 s, iters = (38040, 0), opt = 0.965
> Progress 0.0%, elapsed 207.0 s, iters = (38597, 0), opt = 0.965
> Progress 0.0%, elapsed 210.0 s, iters = (39145, 0), opt = 0.965
> Progress 0.0%, elapsed 213.0 s, iters = (39704, 0), opt = 0.965
> Progress 0.0%, elapsed 216.0 s, iters = (40262, 0), opt = 0.965
> Progress 0.0%, elapsed 219.0 s, iters = (40822, 0), opt = 0.965
> Progress 0.0%, elapsed 222.0 s, iters = (41375, 0), opt = 0.965
> Progress 0.0%, elapsed 225.0 s, iters = (41921, 0), opt = 0.965
> Progress 0.0%, elapsed 228.0 s, iters = (42475, 0), opt = 0.965
> Progress 0.0%, elapsed 231.0 s, iters = (43042, 0), opt = 0.965
> Progress 0.0%, elapsed 234.0 s, iters = (43602, 0), opt = 0.965
> Progress 0.0%, elapsed 237.0 s, iters = (44179, 0), opt = 0.965
> Progress 0.0%, elapsed 240.0 s, iters = (44738, 0), opt = 0.965
> Progress 0.0%, elapsed 243.0 s, iters = (45280, 0), opt = 0.965
> Progress 0.0%, elapsed 246.0 s, iters = (45807, 0), opt = 0.965
> Progress 0.0%, elapsed 249.0 s, iters = (46355, 0), opt = 0.965
> Progress 0.0%, elapsed 252.0 s, iters = (46916, 0), opt = 0.965
> Progress 0.0%, elapsed 255.0 s, iters = (47472, 0), opt = 0.965
> Progress 0.0%, elapsed 258.0 s, iters = (48011, 0), opt = 0.965
> Progress 0.0%, elapsed 261.0 s, iters = (48554, 0), opt = 0.965
> Progress 0.0%, elapsed 264.0 s, iters = (49089, 0), opt = 0.965
> Progress 0.0%, elapsed 267.0 s, iters = (49634, 0), opt = 0.965
> Progress 0.0%, elapsed 270.0 s, iters = (50172, 0), opt = 0.965
> Progress 0.0%, elapsed 273.0 s, iters = (50730, 0), opt = 0.965
> Progress 0.0%, elapsed 276.0 s, iters = (51269, 0), opt = 0.965
> Progress 0.0%, elapsed 279.0 s, iters = (51835, 0), opt = 0.965
> Progress 0.0%, elapsed 282.0 s, iters = (52397, 0), opt = 0.965
> Progress 0.0%, elapsed 285.0 s, iters = (52955, 0), opt = 0.965
> Progress 0.0%, elapsed 288.0 s, iters = (53519, 0), opt = 0.965
> Progress 0.0%, elapsed 291.0 s, iters = (54092, 0), opt = 0.965
> Progress 0.0%, elapsed 294.0 s, iters = (54664, 0), opt = 0.965
> Progress 0.0%, elapsed 297.0 s, iters = (55236, 0), opt = 0.965
> Progress 0.0%, elapsed 300.0 s, iters = (55819, 0), opt = 0.965
> Progress 0.0%, elapsed 303.0 s, iters = (56378, 0), opt = 0.965
> Progress 0.0%, elapsed 306.0 s, iters = (56945, 0), opt = 0.965
> Progress 0.0%, elapsed 309.0 s, iters = (57513, 0), opt = 0.965
> Progress 0.0%, elapsed 312.0 s, iters = (58077, 0), opt = 0.965
> Progress 0.0%, elapsed 315.0 s, iters = (58654, 0), opt = 0.965
> Progress 0.0%, elapsed 318.0 s, iters = (59206, 0), opt = 0.965
> Progress 0.0%, elapsed 321.0 s, iters = (59777, 0), opt = 0.965
> Progress 0.0%, elapsed 324.0 s, iters = (60348, 0), opt = 0.965
> Progress 0.0%, elapsed 327.0 s, iters = (60918, 0), opt = 0.965
> Progress 0.0%, elapsed 330.0 s, iters = (61492, 0), opt = 0.965
> Progress 0.0%, elapsed 333.0 s, iters = (62068, 0), opt = 0.965
> Progress 0.0%, elapsed 336.0 s, iters = (62637, 0), opt = 0.965
> Progress 0.0%, elapsed 339.0 s, iters = (63204, 0), opt = 0.965
> Progress 0.0%, elapsed 342.0 s, iters = (63782, 0), opt = 0.965
> Progress 0.0%, elapsed 345.0 s, iters = (64342, 0), opt = 0.965
> Progress 0.0%, elapsed 348.0 s, iters = (64889, 0), opt = 0.965
> Progress 0.0%, elapsed 351.0 s, iters = (65435, 0), opt = 0.965
> Progress 0.0%, elapsed 354.0 s, iters = (65973, 0), opt = 0.965
> Progress 0.0%, elapsed 357.0 s, iters = (66541, 0), opt = 0.965
> Progress 0.0%, elapsed 360.0 s, iters = (67117, 0), opt = 0.965
> Progress 0.0%, elapsed 363.0 s, iters = (67699, 0), opt = 0.965
> Progress 0.0%, elapsed 366.0 s, iters = (68281, 0), opt = 0.965
> Progress 0.0%, elapsed 369.0 s, iters = (68849, 0), opt = 0.965
> Progress 0.0%, elapsed 372.0 s, iters = (69420, 0), opt = 0.965
> Progress 0.0%, elapsed 375.0 s, iters = (70001, 0), opt = 0.965
> Progress 0.0%, elapsed 378.0 s, iters = (70577, 0), opt = 0.965
> Progress 0.0%, elapsed 381.0 s, iters = (71176, 0), opt = 0.965
> Progress 0.0%, elapsed 384.0 s, iters = (71759, 0), opt = 0.965
> Progress 0.0%, elapsed 387.0 s, iters = (72344, 0), opt = 0.965
> Progress 0.0%, elapsed 390.0 s, iters = (72924, 0), opt = 0.965
> Progress 0.0%, elapsed 393.0 s, iters = (73487, 0), opt = 0.965
> Progress 0.0%, elapsed 396.0 s, iters = (74043, 0), opt = 0.965
> Progress 0.0%, elapsed 399.0 s, iters = (74607, 0), opt = 0.965
> Progress 0.0%, elapsed 402.0 s, iters = (75153, 0), opt = 0.965
> Progress 0.0%, elapsed 405.0 s, iters = (75719, 0), opt = 0.965
> Progress 0.0%, elapsed 408.0 s, iters = (76278, 0), opt = 0.965
> Progress 0.0%, elapsed 411.0 s, iters = (76855, 0), opt = 0.965
> Progress 0.0%, elapsed 414.0 s, iters = (77424, 0), opt = 0.965
> Progress 0.0%, elapsed 417.0 s, iters = (77974, 0), opt = 0.965
> Progress 0.0%, elapsed 420.0 s, iters = (78514, 0), opt = 0.965
> Progress 0.0%, elapsed 423.0 s, iters = (79093, 0), opt = 0.965
> Progress 0.0%, elapsed 426.0 s, iters = (79649, 0), opt = 0.965
> Progress 0.0%, elapsed 429.0 s, iters = (80214, 0), opt = 0.965
> Progress 0.0%, elapsed 432.0 s, iters = (80789, 0), opt = 0.965
> Progress 0.0%, elapsed 435.0 s, iters = (81351, 0), opt = 0.965
> Progress 0.0%, elapsed 438.0 s, iters = (81912, 0), opt = 0.965
> Progress 0.0%, elapsed 441.0 s, iters = (82477, 0), opt = 0.965
> Progress 0.0%, elapsed 444.0 s, iters = (83038, 0), opt = 0.965
> Progress 0.0%, elapsed 447.0 s, iters = (83588, 0), opt = 0.965
> Progress 0.0%, elapsed 450.0 s, iters = (84138, 0), opt = 0.965
> Progress 0.0%, elapsed 453.0 s, iters = (84728, 0), opt = 0.965
> Progress 0.0%, elapsed 456.0 s, iters = (85306, 0), opt = 0.965
> Progress 0.0%, elapsed 459.0 s, iters = (85872, 0), opt = 0.965
> Progress 0.0%, elapsed 462.0 s, iters = (86434, 0), opt = 0.965
> Progress 0.0%, elapsed 465.0 s, iters = (87021, 0), opt = 0.965
> Progress 0.0%, elapsed 468.0 s, iters = (87591, 0), opt = 0.965
> Progress 0.0%, elapsed 471.0 s, iters = (88163, 0), opt = 0.965
> Progress 0.0%, elapsed 474.0 s, iters = (88753, 0), opt = 0.965
> Progress 0.0%, elapsed 477.0 s, iters = (89275, 0), opt = 0.965
> Progress 0.0%, elapsed 480.0 s, iters = (89804, 0), opt = 0.965
> Progress 0.0%, elapsed 483.0 s, iters = (90351, 0), opt = 0.965
> Progress 0.0%, elapsed 486.0 s, iters = (90919, 0), opt = 0.965
> Progress 0.0%, elapsed 489.0 s, iters = (91471, 0), opt = 0.965
> Progress 0.0%, elapsed 492.0 s, iters = (92066, 0), opt = 0.965
> Progress 0.0%, elapsed 495.0 s, iters = (92683, 0), opt = 0.965
> Progress 0.0%, elapsed 498.0 s, iters = (93297, 0), opt = 0.965
> Progress 0.0%, elapsed 501.0 s, iters = (93889, 0), opt = 0.965
